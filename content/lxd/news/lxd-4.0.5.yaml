title: LXD 4.0.5 LTS has been released
date: 2021/02/02 00:02
origin: https://discuss.linuxcontainers.org/t/lxd-4-0-5-lts-has-been-released/10093
content: |-
  ### Introduction
  The LXD team is pleased to announce the release of LXD 4.0.5!

  This is the fifth bugfix release for LXD 4.0 which is supported until June 2025.

  ### Bugfixes and improvements
  This release includes a couple of months worth of bugfixes and minor improvements from the development branch.

  Some of the highlights include:

   - Support for mediated device passthrough of GPUs
   - Support for SR-IOV passthrough of GPUs
   - Addition of IOMMU details to the resources API
   - Addition of USB address for network devices in the resources API
   - Addition of PCI and USB address for disk devices in the resources API
   - Addition of VLAN details to the network state API
   - Support for memory and CPU usage colums in `lxc list`
   - Support for `--reuse` in `lxc snapshot`
   - Support for `--reuse` in `lxc storage volume snapshot`

  The full list of commits is available below:

   - extract restart logic to new instance interface function of lxc and qemu
   - scripts/bash: Fix snap handling
   - extract common restart code to driver_common.go
   - lxd/storage: Rename RunningSnapshotFreeze to RunningCopyFreeze
   - lxd/storage: Ensure source is frozen during copy
   - lxd/instance/drivers: Write out updated backup.yaml after rename
   - lxd: Switch to new candid URL
   - lxd/storage/zfs: No need to remove dashes from UUID
   - shared: Drop GroupId and UserId
   - lxd: Port to os/user
   - lxd/daemon: Log protocol
   - lxd/daemon: Pass writer to Authenticate
   - lxd/daemon: Record username on unix queries
   - lxd/storage: Lock during the whole image replace
   - lxd/db/errors: Adds ErrNoClusterMember var used to indicate no cluster member has been found for a resource
   - lxd/db/storage/volumes: Modifies GetStorageVolumeNodeAddresses to detect volumes that are not bound to a single node
   - lxd/db/storage/volumes: Removes StorageVolumeIsAvailable
   - lxd/response: Updates forwardedResponseIfVolumeIsRemote to accept poolName rather than poolID
   - lxd/storage/volumes: forwardedResponseIfVolumeIsRemote usage
   - lxd/storage/volumes/snapshot: forwardedResponseIfVolumeIsRemote usage
   - lxd/project/project: Adds StorageVolumeProjectFromRecord function
   - lxd/db/instances: Renames and reworks instanceListExpanded to InstanceList
   - lxd/db/instances/export/test: Removes unused file
   - lxd/db/instances/test: Renames TestInstanceListExpanded to TestInstanceList
   - lxd/patches: driver.VolumeTypeNameToDBType usage
   - lxd/profiles/utils: Comment on doProfileUpdateContainer for clarity
   - lxd/response: cluster.ConnectIfVolumeIsRemote usage
   - lxd/storage/drivers/driver/types: Adds VolumeMultiNode field to Info
   - lxd/storage/drivers/driver/cephfs: Adds VolumeMultiNode=true to Info struct
   - lxd/storage/utils: Renames VolumeTypeNameToType to VolumeTypeNameToDBType
   - lxd/storage/utils: Adds VolumeDBTypeToTypeName function
   - lxd/storage/utils: Comment consistency
   - lxd/storage/utils: Renames and reworks VolumeUsedByRunningInstancesWithProfilesGet to VolumeUsedByInstances
   - lxd/storage/utils: Adds VolumeUsedByExclusiveRemoteInstancesWithProfiles function
   - lxd/cluster/connect: Reworks ConnectIfVolumeIsRemote to use storagePools.VolumeUsedByExclusiveRemoteInstancesWithProfiles
   - lxd/storage/volumes: storagePools.VolumeTypeNameToDBType usage
   - lxd/storage/volumes: Updates storagePoolVolumeTypePost to use updated storagePools.VolumeUsedByInstances
   - lxd/storage/backend/lxd: Updates RestoreCustomVolume with VolumeUsedByInstances
   - lxd/storage/utils: Removes VolumeUsedByInstancesGet function as not properly project compliant
   - lxd/storage/volumes/utils: Replaces storagePools.VolumeUsedByInstancesGet usage with storagePools.VolumeUsedByInstances in storagePoolVolumeUsedByGet
   - lxd/device/disk: Replace storagePools.VolumeUsedByInstancesGet usage with storagePools.VolumeUsedByInstances in storagePoolVolumeAttachShift
   - lxd/endpoints: Update error string in test
   - shared/simplestreams: Record variant
   - shared/simplestreams: Fix sorting of images
   - lxd/project/project: Updates StorageVolumeProjectFromRecord to not return error (as never populated)
   - lxd/storage/utils: project.StorageVolumeProjectFromRecord usage
   - lxd/instance/qmp: Merge Go routines
   - shared/cancel: Close chDone on failure
   - lxd: Only close doneCh on success
   - exec: make sure to only use TIOCGPTPEER if available
   - lxd/instance/drivers: Change memory backend
   - lxd/instance/drivers: Add virtio-fs config drive template
   - lxd/instance/drivers: Handle virtio-fs config drive
   - lxd/instance/drivers: Add system unit file for virtio-fs config drive
   - lxd/device/disk: Support virtio-fs
   - lxd/device/disk: Handle alternative virtfs-proxy-helper location
   - lxd-agent: Prefer virtio-fs over 9p
   - lxd: Replace use of tx.GetProject with cluster.GetProject
   - lxd/storage: VolumeTypeNameToDBType usage
   - lxd/device/disk: storagePools.VolumeUsedByExclusiveRemoteInstancesWithProfiles usage
   - lxd/storage/backend/lxd: Updates UpdateCustomVolume to check for online resize support when resizing
   - lxd/db/storage/volumes: Adds workaround for old remote volume schema in GetStorageVolumeNodeAddresses
   - lxd/instances: Fix virtiofsd for config drive
   - lxd/instance/drivers: Issue warning if virtiofsd is missing
   - lxd/device: Issue warning if virtiofsd is missing
   - lxd/instance/drivers: Fix lxd-agent systemd unit conditions
   - lxd/storage: Only freeze if not frozen
   - lxd/device/sriov: Harden calls to ip link vf
   - lxd/storage/zfs: Add support for clone_copy rebase
   - lxd/qmp: Ensure checkbuffer is called
   - lxd/virtiofs: Fix handling of config drive
   - lxd/storage/lvm: Properly make lvm.thinpool_name node-specific
   - lxd/instance/drivers/driver/qemu: Call MountInstanceSnapshot when mounting vm snapshots
   - lxd/instance/drivers/driver/qemu: Ensure consistent mount state when restoring snapshot irrespective of whether instance was running
   - lxd/instance/drivers/driver/lxc: Ensure consistent mount state when restoring snapshot irrespective of whether instance was running
   - lxd/storage/drivers/volume: Comment clarification
   - lxd/storage/drivers/driver/zfs/volumes: Only resurrect deleted image volume if same size in CreateVolume
   - lxd/storage/drivers/driver/zfs/volumes: Improved logging
   - lxd/storage/drivers/driver/zfs/volumes: Return ErrNotSupported in SetVolumeQuota when trying to resize an image block volume
   - lxd/storage/drivers/driver/ceph/volumes: Only resurrect deleted image volume if same size in CreateVolume
   - lxd/storage/drivers/driver/ceph/volumes: Improves logging in CreateVolume
   - lxd/storage/drivers/driver/ceph/volumes: Don't allow image volume size in SetVolumeQuota
   - lxd/storage/backend/lxd: Adds size to logging in SetInstanceQuota
   - lxd/storage/backend/lxd: Update EnsureImage to resize/regenerate optimized image volumes if existing volume is different size than pool's volume.size setting
   - lxd/storage/backend/lxd: Updates CreateInstanceFromImage to detect ErrCannotBeShrunk and create one-off non-optimized volume for instance
   - lxd/storage/drivers/driver/ceph/utils: Updates getRBDMappedDevPath to allow control of mapping
   - lxd/storage/drivers/driver/ceph/utils: d.rbdUnmapVolumeSnapshot on one line
   - lxd/storage/drivers/driver/ceph/volumes: d.getRBDMappedDevPath usage
   - lxd/storage/utils: Makes InstanceDiskBlockSize snapshot aware
   - lxd/storage/drivers/driver/ceph/volumes: Removes extraneous comment
   - lxd/storage/drivers/driver/ceph/volumes: Activate volume before genericVFSMigrateVolume in MigrateVolume
   - lxd/storage/pool/interface: Adds MountInfo struct
   - lxd/storage/pool/interface: Return MountInfo from MountInstance and MountInstanceSnapshot
   - lxd/storage/backend/lxd: Populate MountInfo with OurMount and DiskPath in MountInstance
   - lxd/storage/backend/lxd: Unexports getInstanceDisk
   - lxd/storage/backend/lxd: Populates OurMount and DiskPath in MountInstanceSnapshot
   - lxd/storage/utils: Updates InstanceDiskBlockSize to use MountInfo
   - lxd/storage/backend/mock: Interface changes
   - lxd/instance: Updates instanceCreateAsSnapshot to use MountInfo
   - lxd/patches: Updates to use MountInfo
   - lxd/instance/drivers/driver/lxc: Updates mount to return MountInfo and usage
   - lxd/instance/drivers/driver/qemu: Updates mount to return MountInfo and usage
   - lxd/storage/drivers/generic/vfs: Adds genericVolumeDiskFile constant for excluding generic disk block files
   - lxd/storage/drivers/generic/vfs: Avoid using d.GetVolumeDiskPath in genericVFSMigrateVolume
   - lxd/storage/drivers/generic/vfs: Use genericVolumeDiskFile in genericVFSGetVolumeDiskPath
   - lxd/storage/drivers/driver/ceph/utils: Add logging to rbdMapVolume and rbdUnmapVolume
   - lxd/storage/drivers/driver/ceph/utils: Updates getRBDMappedDevPath to support snapshots
   - lxd/storage/drivers/driver/ceph/volumes: Updates MountVolume to return ourMount for block volumes
   - lxd/storage/drivers/driver/ceph/volumes: Updates UnmountVolumeSnapshot to handle block volumes
   - lxd/storage/drivers/driver/ceph/volumes: Renames RBDDevPath to devPath
   - lxd/storage/utils: Improves logging and uses size value from vol.ConfigSizeFromSource in ImageUnpack
   - lxd/storage/backend/lxd: Improves logging in CreateInstanceFromImage
   - lxd/storage/backend/lxd: Improves logging and uses imgVol.ConfigSizeFromSource in EnsureImage
   - doc/instances: Rephrase limits.memory.swap
   - doc/instances: Typo fix
   - lxd/storage: Use same defaults as "lxd init"
   - lxd/instance/drivers/driver/qemu: Converts all supplied memory byte values to mebibytes for comparison
   - lxd/rbac: Fix URL encoding
   - lxd/cgroup: Fix V2 detection/handling
   - lxd/cgroup: Add file read/writer
   - lxd/cgroup: Fix controller detection
   - lxd/cgroup: Add cpuset functions
   - lxd/cgroup: Fix warning wording
   - lxd/devices: Drop old workaround
   - lxd/devices: Port to cgroup package
   - lxd/instance: Replace CGroupGet/CGroupSet
   - lxd/devices: Update to use cgroup abstraction
   - lxd/cgroup: Implement proper typing
   - lxd/cgroup: Change ParseCPU to return int64
   - lxd/instance/lxc: Update for cgroup function changes
   - lxd/cgroup: Improve naming
   - lxd/instance: Update for new naming
   - lxd/cgroup: Add V2 for GetBlkioWeight and SetBlkioWeight
   - lxd/device: Move disk priority back to lxc
   - lxd/cgroup: Fix get blkio weight
   - lxd/cgroup: Add abstraction for SetBlkioLimit
   - lxd/device: Port disk limits to abstraction
   - lxd/db/storage/volumes: Renames GetStorageVolumeNodeAddresses to GetStorageVolumeNodes
   - lxd/cluster/connect: Updates ConnectIfVolumeIsRemote to use tx.GetStorageVolumeNodes
   - lxd/db/storage/volumes/test: Updates test for TestGetStorageVolumeNodes
   - lxd/storage/utils: Updates VolumeUsedByInstances to accept an api.StorageVolume arg
   - lxd/storage/utils: Updates VolumeUsedByExclusiveRemoteInstancesWithProfiles to use an api.StorageVolume arg
   - lxd/storage/volumes/utils: Updates storagePoolVolumeUsedByGet to accept an api.StorageVolume arg
   - lxd/cluster/connect: Updates ConnectIfVolumeIsRemote to use VolumeUsedByExclusiveRemoteInstancesWithProfiles with vol arg
   - lxd/device/disk: Updates validateConfig to use storagePools.VolumeUsedByExclusiveRemoteInstancesWithProfiles with vol arg
   - lxd/device/disk: Updates storagePoolVolumeAttachShift to use storagePools.VolumeUsedByInstances with vol arg
   - lxd/storage/backend/lxd: Updates UpdateCustomVolume to use VolumeUsedByInstances with vol arg
   - lxd/storage/backend/lxd: Updates RestoreCustomVolume to use VolumeUsedByInstances with vol arg
   - lxd/storage/volumes: storagePoolVolumeUsedByGet usage
   - lxd/storage/volumes: Updates storagePoolVolumeTypePost to use storagePools.VolumeUsedByInstances with a vol arg
   - lxd/storage/volumes: Use db.StoragePoolVolumeTypeName constants
   - lxd/storage/volumes: Updates storagePoolVolumeTypeGet to use storagePoolVolumeUsedByGet with a vol arg
   - lxd/storage/volumes: Updates storagePoolVolumeTypeDelete to use storagePoolVolumeUsedByGet with a vol arg
   - lxd/storage/volumes/snapshots: storagePoolVolumeUsedByGet usage
   - lxd/storage/volumes/utils: Removes storagePoolVolumeAPI constants and converter functions
   - lxd/patches: Recreates patchStoragePoolVolumeAPI constants and function for historical patches
   - lxd/storage/volumes: Simplifies volume type in URL in storagePoolVolumes routes
   - lxd/storage/volumes/snapshot: Simplifies volume type in URL generation
   - lxd/storage/volumes: Updates storagePoolVolumeTypePostRename args
   - lxd/storage/volumes: Removes unnecessary var init in storagePoolVolumeTypePostMove
   - lxd/storage/drivers/driver/ceph/volumes: Fix rbd device leak in RenameVolume
   - lxd/storage/drivers/generic/vfs: Use revert package in genericVFSRenameVolume
   - lxd/storage/utils: Adds matching of instances on same node as local volume in VolumeUsedByInstances
   - lxd/storage/volume: Removes need for loading storage volume when doing lxc storage volume attach
   - lxd/storage/utils: Renames VolumeUsedByInstanceDevices and passes usedByDevices into callback function
   - lxd/device/disk: storagePools.VolumeUsedByInstanceDevices usage
   - lxd/storage/backend/lxd: VolumeUsedByInstanceDevices usage
   - lxd/storage/utils: VolumeUsedByInstanceDevices usage
   - lxd/storage/volumes/utils: storagePools.VolumeUsedByInstanceDevices usage
   - lxd/storage/volumes: storagePools.VolumeUsedByInstanceDevices usage
   - lxd/storage/volumes: Updates storagePoolVolumeTypePost to use updated storagePoolVolumeTypePostRename and storagePoolVolumeTypePostMove
   - lxd/storage/volumes: Updates storagePoolVolumeTypePostRename to use updated storagePoolVolumeUpdateUsers
   - lxd/storage/volumes: Updates storagePoolVolumeTypePostMove to use updated storagePoolVolumeUpdateUsers
   - lxd/instance/drivers/driver/lxc: Removes common function LocalDevices implemented in LXC driver
   - lxd/db/instances: Better errors in InstanceList
   - lxd/storage/utils: Adds VolumeUsedByProfileDevices function
   - lxd/storage/utils: Removes unused volume name matching logic in VolumeUsedByInstanceDevices
   - lxd/storage/volumes/utils: Updates storagePoolVolumeUpdateUsers to use storagePools.VolumeUsedByProfileDevices and storagePools.VolumeUsedByInstanceDevices
   - lxd/storage/volumes/utils: Updates storagePoolVolumeUsedByGet to use storagePools.VolumeUsedByProfileDevices
   - lxd/storage/volumes/utils: Golint suggestions in storagePoolVolumeUsedByGet
   - lxd/cluster/connect: Removes CLI command flag in error response in ConnectIfVolumeIsRemote
   - lxd/storage: Fix building on stable-4.0
   - lxd/db/storage/pools: Adds isRemoteStorage function
   - lxd/db/storage/volumes: Updates storagePoolVolumeGetType to not populate Location when driver is remote
   - lxd/db/storage/pools/test: Initialise db.StorageRemoteDriverNames in db_test package
   - lxd/db: Removes duplicated db.StorageRemoteDriverNames init from tests
   - lxd/locking/lock: Adds UnlockFunc type and updates Lock() signature
   - lxd/storage/drivers/utils: Extends OperationLockName to take into account content type.
   - lxd/storage/drivers/volume: Adds MountLock function
   - lxd/storage/drivers/driver/lvm/utils: drivers.OperationLockName usage
   - lxd/storage/backend/lxd: drivers.OperationLockName usage
   - lxd/storage/drivers: Adds mount and unmount locking
   - lxd/storage/drivers/volume: Removes locking from MountTask and UnmountTask
   - lxd/instance/drivers/driver/lxc: Stop devices in two phases
   - lxd/device/disk: Removes workaround for ceph disks now that disks are stopped after instance is stopped
   - doc/rest-api: auth property is never set to guest
   - lxd/apparmor: Workaround socket handling
   - lxd/storage: Expand local config
   - lxd/cgroup: Fix swap limits
   - lxd/instance/lxc: Fix crash in cgroup function
   - lxc/snapshot: Add reuse option
   - lxc/storage: Add reuse option to snapshot
   - i18n: Update translation templates
   - lxd/instance: Removes instanceConfigureInternal
   - lxd/instance: Replace instanceConfigureInternal usage with update backup file which was only relevant part
   - lxd/storage/backend/lxd: Adds log to CreateInstanceFromMigration showing if migration volume size header not sent
   - lxd/cgroup: Support SetCPUShare on V2
   - lxd/cgroup: Implement SetCPUCfsLimit for V2
   - lxd/instance/lxc: Port to SetCPUCfsLimit
   - lxd/cgroup: Support CGroup V2 in ParseCPU
   - lxd-agent: Don't allow connections when rebooting
   - lxd/api/project: Reject quotes in project names
   - lxd/instance/drivers/driver/lxc: Updates initLXC to use project and instance name in callhook hook commands
   - lxd/instance/drivers/driver/lxc: Updates startCommon to quote hook command arguments
   - lxd/main/callhook: Updates cmdCallhook to support using project name and instance name in arguments
   - lxd/api/internal: Adds support for using instance name and project name in container hook routes
   - lxd/storage: Apply rename template
   - lxd/patches: Adds patchVMRenameUUIDKey patch to rename config key from volatile.vm.uuid to volatile.uuid
   - shared/validate: Adds IsUUID function
   - shared/instance: Adds volatile.uuid key to instance validation
   - shared/instance: Removes vm.uuid from instance validation in ConfigKeyChecker
   - doc/instances: Replaces volatile.vm.uuid with volatile.uuid
   - lxd/instance/drivers/driver/qemu: Updates Start to use and populate volatile.uuid instead of volatile.vm.uuid
   - lxd/instance/drivers/driver/lxc: Generate instance UUID if not set in startCommon
   - lxd/instance/drivers/driver/qemu: Makes UUID generation terminology consistent with container
   - lxc/list: Fix typo in help
   - i18n: Update translation templates
   - lxc/list: Add two new columns (memory % and CPU)
   - i18n: Update translation templates
   - doc: fix typos in instances.md
   - lxd/storage/drivers/driver/zfs/volumes: Remove workarounds for snapshot volume mounting
   - lxd/refcount: Adds ref counting package
   - lxd/storage/drivers/volume: Adds ref counting functions
   - lxd/storage/drivers/volume: Updates MountTask to use new MountVolume signature
   - lxd/storage/pool/interface: Removes OurMount from MountInfo struct
   - lxd/storage/pool/interface: Removes "our mount" bool return value from MountCustomVolume
   - lxd/storage/drivers/interface: Removes "our mount" bool return value from MountVolume
   - lxd/storage/drivers/errors: Adds ErrInUse error
   - lxd/storage/drivers/drivers/mock: Updates MountVolume signature
   - lxd/storage/drivers/utils: Error quoting in shrinkFileSystem
   - lxd/storage/drivers/driver/btrfs/volumes: Updates MountVolume signature
   - lxd/storage/drivers/driver/ceph/volumes: Adds ref counting to MountVolume and UnmountVolume
   - lxd/storage/drivers/driver/cephfs/volumes: Updates MountVolume signature
   - lxd/storage/drivers/driver/dir/volumes: Updates MountVolume signature
   - lxd/storage/drivers/driver/lvm/volumes: Adds ref counting to MountVolume and UnmountVolume
   - lxd/storage/drivers/driver/zfs/volumes: Adds ref counting to MountVolume and UnmountVolume
   - lxd/storage/drivers/generic/vfs: Updates genericVFSBackupUnpack to use new MountVolume signature
   - lxd/storage/utils: Adds InstanceMount and InstanceUnmount and updates InstanceDiskBlockSize to use them
   - lxd/storage/backend/mock: Removes OurMount
   - lxd/storage/backend/mock: Removes "our mount" bool return value from MountCustomVolume
   - lxd/storage/backend/lxd: Updates mount functions to remove OurMount and use new MountVolume signature
   - lxd/storage/backend/lxd/patches: b.driver.MountVolume usage
   - lxd/instance/drivers/driver: Unexports common restart function
   - lxd/instance/instance/interface: Removes deprecated StorageStart and StorageStop functions
   - lxd/instance/drivers/driver/common: Import ordering
   - lxd/instance/drivers/driver/lxc: Updates mount usage with ref counting in mind
   - lxd/instance/drivers/driver/lxc: Removes deprecated StorageStart and StorageStop
   - lxd/instance/drivers/driver/qemu: Updates mount usage with ref counting in mind
   - lxd/instance/drivers/driver/qemu: Implements RegisterDevices
   - lxd/instance/drivers/driver/qemu: Removes deprecated StorageStart and StorageStop
   - lxd/patches: Updates instance mount usage
   - lxd/instance/metadata: Removes use of c.StorageStart and c.StorageStop
   - lxd/instance/test: Removes use of StorageStart
   - lxd/instance: Updates instanceCreateAsSnapshot to use updated mount functions
   - lxd/devices: Register devices on all instance types
   - lxd/device/disk: Implements Register function
   - lxd/device/disk: Updates mount function usage in mountPoolVolume
   - lxd/instance/drivers/driver/qemu: mount fixes
   - lxd/storage/backend/lxd: Adds revert to MountInstance
   - lxd/storage/drivers/driver/ceph/volumes: Adds revert to MountVolume
   - lxd/storage/drivers/driver/lvm/volumes: Adds revert to MountVolume
   - lxd/storage/drivers/driver/zfs/volumes: Adds revert to CreateVolumeFromBackup
   - lxd/storage/drivers/driver/zfs/volumes: Adds revert to MountVolume
   - lxd/storage/drivers/driver/zfs/volumes: Simplifies MountVolumeSnapshot and adds revert for parent volume mount
   - lxd/storage/drivers/generic/vfs: Adds revert to genericVFSBackupUnpack
   - lxd/api/internal: Adds internalImportFromRecovery function for instance recovery import
   - lxd/instances/post: Updates createFromBackup to use updated internalImport signature
   - lxd/device/disk comments
   - test/suites/backup: Updates lxd import tests to expect instance to be unmounted after import
   - lxd/instance/drivers/driver/lxc: Moves instance mount before idmap related var loading
   - lxd/instance/drivers/driver/lxc: Rotate log file same stage as VM for consistency
   - lxd/instance/drivers/driver/qemu: Use instance.LoadByProjectAndName in getMonitorEventHandler
   - test: Updates container_import tests to remove lxd import followed by kill and start test
   - lxd/storage/backend/lxd: Detect unsupported live copy of VMs and fail with clear message
   - lxd/instance/lxc: Add extra check for devpts_fd
   - lxd/device/nic/bridged: Clarifies when device's Add function is called
   - lxd/migrate/instance: Improves comments when instantiating migration.VolumeTargetArgs
   - lxd/storage/backend/lxd: Improves comments when instantiating migration.VolumeTargetArgs
   - lxd/storage/backend/lxd: Reject custom volume config if supplied in CreateInstanceFromMigration
   - lxd/storage/drivers/driver/zfs/volumes: Use srcVol.NewVMBlockFilesystemVolume in CreateVolumeFromCopy
   - lxd/storage/drivers/driver/zfs/volumes: Apply filesystem quota in CreateVolumeFromMigration
   - lxd/storage/drivers/driver/btrfs/volumes: Apply quota in CreateVolumeFromMigration
   - lxd/storage/drivers/driver: Makes size update consistent with other drivers in UpdateVolume
   - lxd/storage/drivers/driver/cephfs/volumes: Use vol.ConfigSize() rather than vol.ExpandedConfig("size") for consistency with other drivers
   - lxd/storage/drivers/driver/cephfs/volumes: Makes CreateVolumeFromMigration volume quota setting consistent with other non-block-backed drivers
   - lxd/ap/internal: Improved error messages from instanceCreateInternal
   - lxd/instance: Improved error messages from instanceCreateInternal
   - lxd/instances/post: Improved error messages from instanceCreateInternal
   - lxd/migrate/instance: Improved error messages from instanceCreateInternal
   - lxd/device/disk: Only validate external disk source paths when real instance is loaded
   - lxd/instance/drivers/driver/lxc: Remove user facing reference to "common start logic" in error
   - lxd/instance/drivers/driver: Just log device add failures when adding device in non-user requested context
   - lxd/instance/drivers/driver/lxc: Pass existing isRunning to c.updateDevices to avoid extra call to IsRunning()
   - lxd/storage: Fix build on 4.0
   - shared: Allow volatile uuid config keys
   - lxd/instance/drivers: Support vgpu in qemu template
   - lxd/instance/drivers: Support vgpu in VMs
   - lxd/device/nic/sriov: Don't fail when resetting VF MAC to 00:00:00:00:00:00
   - lxd/device/config: Allow gputype property
   - lxd/device: Support mdev GPUs
   - doc: Document mdev config key
   - api: Add gpu_mdev
   - lxc/info: Show mdev profiles
   - po: Update translation
   - lxd/images: Replace fp with fingerprint in logs
   - lxd/daemon/images: Add contextual logging and use "fingerprint" rather than "image" for consistency with other code areas
   - lxd/profiles/utils: Remove container references, improve comments
   - lxd/db/profiles: Updates GetInstancesWithProfile to return all instance types, not just containers
   - shared/instance: Improves comments
   - lxd/profiles: Use project.ProfileProject instead of tx.ProjectHasProfiles
   - test/suites/projects: Fix bug in test that assumed project wasnt checked for existance
   - lxd/profiles/utils: Updates doProfileUpdate and doProfileUpdateCluster to return project and instance name in error
   - lxd/device/device/interface: Moves updatable fields from CanHotPlug() into UpdatableFields()
   - lxd/device/errors: Adds ErrCannotUpdate error
   - lxd/device/device/common: Updates common implementation of CanHotPlug() and UpdatableFields()
   - lxd/device/disk: Adds UpdatableFields function based on instance type
   - lxd/device/disk: Only apply running IO limits to containers in Update
   - lxd/device/nic/bridged: Adds UpdatableFields function and removes custom CanHotPlug function
   - lxd/device/nic/ipvlan: Updates CanHotPlug function
   - lxd/device/nic/p2p: Removes custom CanHotPlug function and adds UpdatableFields function
   - lxd/device/nic/routed: Splits CanHotPlug function into new CanHotPlug and UpdatableFields functions
   - lxd/instance/drivers/driver/lxc: Updates device management functions to use new CanHotPlug and UpdatableFields functions
   - lxd/instance/drivers/driver/qemu: Updates device management functions to use new CanHotPlug and UpdatableFields functions
   - lxd/device/config/devices/sort: Improves comments in Less
   - lxd/device/disk: Removes use of global logger and use device contextual logger
   - lxd/device/disk: Rework volatile apply_quota key handling to support virtual machines
   - lxd/refcount: Adds Get function
   - lxd/storage/backend/lxd: Removes dependence on RunningQuotaResize in SetInstanceQuota
   - lxd/storage/backend/lxd: Removes dependence on RunningQuotaResize in UpdateCustomVolume
   - lxd/storage/errors: Removes ErrRunningQuotaResizeNotSupported
   - lxd/storage/drivers/volume: Adds MountInUse function
   - lxd/storage/drivers/utils: Adds vol.MountInUse usage to ensureVolumeBlockFile
   - lxd/storage/drivers/utils: Adds filesystemTypeCanBeShrunk and updates shrinkFileSystem to use it
   - lxd/storage/drivers/utils: Updates growFileSystem to use DefaultFilesystem
   - lxd/storage/drivers/driver/types: Removes RunningQuotaResize
   - lxd/storage/drivers: Renames drivers_mock.go to driver_mock.go to align with other driver naming
   - lxd/storage/drivers/driver/mock: Removes RunningQuotaResize
   - lxd/storage/drivers/driver/btrfs: Updates BTRFS to use ensureVolumeBlockFile's in-use detection
   - lxd/storage/drivers/driver/dir: Updates to use ensureVolumeBlockFile's in-use detection
   - lxd/storage/drivers/driver/ceph/utils: Adds resizeVolume function
   - lxd/storage/drivers/driver/ceph: Removes RunningQuotaResize
   - lxd/storage/drivers/driver/ceph/volumes: Reworks SetVolumeQuota to be more aligned with LVM driver structure
   - lxd/storage/drivers/driver/cephfs: Removes RunningQuotaResize
   - lxd/storage/drivers/driver/lvm: Removes RunningQuotaResize
   - lxd/storage/drivers/driver/lvm/volumes: Updates SetVolumeQuota to use Volume's in-use detection
   - lxd/storage/drivers/driver/zfs: Removes RunningQuotaResize
   - lxd/storage/drivers/driver/zfs/volumes: Updates SetVolumeQuota to use Volume's in-use detection
   - lxd/storage/utils: Updates validatePoolCommonRules to differentiate VM volumes and filesystem volumes
   - lxd/instance: Error quoting and logging improvements in instanceCreateInternal
   - lxd/instance/drivers/driver/lxc: Adds revert to lxcCreate
   - lxd/instance/drivers/driver/qemu: Adds revert to qemuCreate
   - lxd/storage/backend/lxd: Set the correct volume content type for custom volumes
   - lxd/project/project: Adds ProfileProject and ProfileProjectFromRecord functions
   - lxd/db/storage/volumes: Adds content type constants and populates ContentType field in storagePoolVolumeGetType
   - lxd/storage/backend/lxd: Use volume's ContentType field in MountCustomVolume
   - lxc/info: Extend mdev details
   - i18n: Update translation templates
   - lxd/device/disk: Ignore ErrNotRunning for virtfs-proxy-helper
   - lxd/patches/utils: Adds legacy volumeFillDefault function for patches
   - lxd/patches: Updates patches to switch from driver.VolumeFillDefault to volumeFillDefault
   - lxd/storage/drivers/interface: Adds FillVolumeConfig
   - lxd/storage/drivers/driver/common: Adds FillVolumeConfig no-op for common drivers
   - lxd/storage/drivers/driver/{ceph,lvm}: Adds FillVolumeConfig function to populate default filesystem settings
   - lxd/storage/utils: Updates VolumeDBCreate to accept a Pool and call driver.FillVolumeConfig
   - lxd/storage/backend/lxd: VolumeDBCreate usage
   - lxd/storage/utils: Removes VolumeFillDefault and VolumeValidateConfig
   - lxd/storage/pool/interface: Adds FillInstanceConfig
   - lxd/storage/backend/lxd: Implements FillInstanceConfig
   - lxd/storage/backend/mock: Adds FillInstanceConfig
   - lxd/instance/drivers/driver/lxc: Updates lxcCreate to use storagePool.FillInstanceConfig
   - lxd/instance/drivers/driver/qemu: Updates qemuCreate to use storagePool.FillInstanceConfig
   - lxd/instance/drivers: Better errors in instance create functions
   - lxd/storage/backend/mock: Return storage pool ID 1 rather than -1 to allow tests to run
   - lxd/instance/qemu: Always render disk
   - Support zstd compression.
   - lxd-agent: Don't rely on systemd for rebooting
   - lxd/instance: Move id field to common
   - lxd/instance/common: Use 'd' as main variable
   - lxd/instance/qemu: Rename d to dev
   - lxd/instance/qemu: Replace vm with d
   - lxd/instance/lxc: Rename d to dev
   - lxd/instance/lxc: Replace c with d
   - lxd/isntance: Move most properties to common
   - lxd/instance: Move common functions to drive_common
   - shared/instance: golint fixes
   - shared/instance: Adds ConfigVolatilePrefix constant
   - shared/instance: ConfigVolatilePrefix usage
   - shared/instance: Adds InstanceIncludeWhenCopying function
   - lxd/copy: shared.InstanceIncludeWhenCopying usage in copyInstance
   - lxc: shared.ConfigVolatilePrefix usage
   - lxd: shared.ConfigVolatilePrefix usage
   - lxd/instances/post: shared.InstanceIncludeWhenCopying usage in createFromCopy
   - lxd/storage: Add volatile idmap setting debug log to resetContainerDiskIdmap
   - lxd/device/disk: Include network-config in cidata
   - lxd/instance: Fix build on 4.0
   - lxd/resources: Add GetNetworkState and GetNetworkCounters
   - lxd/storage/pools/utils: Updates comment and error for storagePoolCreateLocal
   - lxd/storage/pools: Error quoting
   - lxd/networks: Whitespace
   - lxd/network/driver/bridge: Adds some basic revert to setup()
   - lxd/network/driver/bridge: Only initialise revert if config has changed
   - lxd/network/driver/bridge: Fix incorrect return value
   - api: add resources_pci_iommu extension
   - shared/api: Add IOMMUGroup field to ResourcesPCIDevice
   - Add IOMMU group value to PCI devices
   - lxd/instance: Use revert package in instanceCreateFromImage
   - lxd/storage/backend/lxd: Remove revert from CreateInstanceFromImage
   - lxd/storage/drivers/driver/common: Enable unsafe resize mode in runFiller when unpacking into image volumes
   - lxd/storage/drivers/driver/ceph/volume: Allow image resize when in unsafe mode in SetVolumeQuota
   - lxd/storage/drivers/driver/zfs/volume: Allow image resize when in unsafe mode in SetVolumeQuota
   - lxd/storage/backend/lxd: Log new volume size in CreateInstanceFromImage
   - lxd/instance/qemu: Follow symlink to lxd-agent
   - lxd/db/networks: Comments
   - lxd/network/network/interface: Updates init to take api.Network and network nodes map
   - lxd/network/network/interface: Adds LocalStatus
   - lxd/network/network/load: Updates LoadByName to pass network nodes from s.Cluster.GetNetworkInAnyState to init()
   - lxd/db/networks: Adds NetworkState type and uses it in place of int
   - lxd/db/networks: Renames networkFillStatus to NetworkStateToAPIStatus
   - lxd/db/networks: Adds NetworkNode type
   - lxd/db/networks: Exports NetworkNodes and updates to return map of NetworkNodes
   - lxd/db/networks: Updates GetNonPendingNetworks usage of NetworkNodes()
   - lxd/db/networks: Modifies getNetwork and GetNetworkInAnyState to return map of NetworkNodes for network
   - lxd/db/networks: Exports NetworkNodes
   - lxd/db/networks: c.GetNetworkInAnyState usage
   - lxd/db/networks: Updates comments to reference state constants
   - lxd/patches: d.cluster.GetNetworkInAnyState usage
   - lxd/api/cluster: d.cluster.GetNetworkInAnyState usage
   - lxd/device/nic: d.state.Cluster.GetNetworkInAnyState usage
   - lxd/network/driver/common: Adds LocalStatus function and store node info inside network via init()
   - lxd/network/driver/bridge: Only perform local date if local status is api.NetworkStatusCreated
   - lxd/networks: Updates doNetworksCreate to skip creation if node is already marked created
   - lxd/networks: d.cluster.GetNetworkInAnyState usage
   - lxd/networks: Don't skip network clean up if network is pending in networkDelete()
   - lxd/db/migration/test: cluster.GetNetworkInAnyState usage
   - lxd/network/network/interface: Adds IsManaged function
   - lxd/network/driver/common: Adds IsManaged function and associated internal variable
   - lxd/networks: Prevent rename of pending networks
   - lxd/network/driver: Only apply local DB change in Update() when local node is in pending state
   - lxd/networks: Updates networksPostCluster to only mark global network states as created once all nodes created
   - lxd/networks: Reduce duplicate query loading network in networkPut and doNetworkUpdate
   - lxd/networks: Prevent update of global network config when network is pending in networkPut
   - lxd/network/bridge: Also delete on unknown status
   - lxd/instance/qemu: Fix GPU passthrough
   - lxd/instance/operations: Allow Wait/Done on nil struct
   - lxd/instance/lxc: Improve use of operations
   - lxd/instance/lxc: Improve locking on file ops
   - lxd/instance/operations: Introduce CreateWaitGet
   - lxd/instance: Introduce restart tracking
   - Makefile: Fix golint URL
   - lxd/network/driver/bridge: Improve IP parsing errors
   - lxd/network/driver/bridge: Don't fill default config on update
   - lxd/network/driver/bridge: Regenerate auto values on update
   - test/suites/network: Adds test for unsetting ipv4.address and ipv6.address
   - test/suites/network: Adds test for regeneration of auto values
   - doc/networks: Clarify bridge default auto values
   - lxd/device/disk: Only validate disk source pool when an actual instance is set
   - test/suites/migration: Adds tests for copying instance with snapshots containing invalid disk devices
   - lxc-to-lxd: Fix handling on snap
   - lxd/instance: Bypass delete protection for internal calls
   - lxd/instance/qemu: Improve state handling
   - lxd/instance/operationlock: Allow Reset
   - lxd/instance/qemu: Stretch start/stop timeout
   - lxd/instance/qemu: Increase virtiofsd timeout to 10s
   - lxd/instance/qemu: Move more logic into qemuArchConfig
   - lxd/instance: Add Info function
   - lxd/instance: Add SupportedInstanceDrivers
   - lxd/instance: Add driver cache
   - lxd/api: Show all instance drivers
   - lxd/qemu: Don't stop processing events on shutdown
   - lxd/rbac: Improve access to user information
   - lxd/daemon: Improve request context
   - lxd/rbac: Move userIsAdmin and userHasPermission
   - lxd: Move to new RBAC helpers
   - lxd/storage/volumes: Error quoting in storagePoolVolumesTypePost
   - lxd/storage/volumes: Fixes misleading comment in storagePoolVolumesPost
   - lxd/storage/volumes: Error quoting in storagePoolVolumesPost
   - lxd/networks: Use SmartError for response when loading networks
   - lxd/project: Add new FilterUsedBy helper
   - lxd: Filter all UsedBy based on RBAC
   - lxc/file: Fix typo in fileGetWrapper
   - lxc/restore: Fix typo in help
   - lxd/networks: Fix bad logging level
   - lxd/daemon: Fix bad permission check
   - lxd/storage/drivers/generic: Fix VM rename with ZFS
   - lxd/instance: Remove duplicate event
   - lxd/instance/common: Implement lifecycle wrapper
   - lxd/instance/lxc: Port to new wrapper
   - lxd/instance/lxc: Lock restore operations
   - lxd/instance/qemu: Port to new wrapper
   - lxd/instance/qemu: Lock restore operations
   - lxd/backup: Add lifecycle events
   - lxd/network: Add lifecycle function
   - lxd/network: Implement create wrapper
   - lxd/network: Add lifecycle events
   - lxd/cluster/request/clienttype: Moves client type constants and helper into own package
   - lxd/cluster/connect: Removes client type constants and helper
   - lxd: Updates use of ClientType now moved to cluster/request package
   - lxd/networks: Ensure etag generation uses its own copy of config in networkPut
   - lxd/networks: Comment in networksPostCluster
   - lxd/networks: Corrects log level in networksPostCluster
   - lxd/networks: golint fix
   - lxd/db/networks: Removes unused NetworkErrored function
   - lxd/db/networks: Updates network state comments to indicate node usage
   - lxd/apparmor/qemu: Allow some more files
   - lxd/storage/drivers/drivers/zfs/volumes: Fixes 10s delay when using VMs with ZFS in snap
   - lxd/instance: Adds per-struct contextual logger.
   - lxd/instance/drivers: Fixes instanceType in instance logger
   - i18n: Update translation templates
   - Revert "lxd/db/networks: Removes unused NetworkErrored function"
   - lxd/db/storage/pools: Updates storage pool state comments to indicate node usage
   - lxd/db/storage/pools: Replace use of networkCreated with storagePoolCreated in getStoragePool
   - lxd/storage/pools/utils: Consistent commnent endings
   - lxd/storage/pools/utils: Fix comment in storagePoolCreateLocal
   - lxd/storage/pools: Add logging for storage pool state updates in storagePoolsPostCluster
   - lxd/db/storage/pools: Updates comment on StoragePoolCreated
   - lxd/storage/pools: Fix copy paste error in comment
   - lxd/storage/load: Updates GetPoolByName to use state.Cluster.GetStoragePoolInAnyState
   - lxc/storage: Adds --target flag support to cmdStorageSet
   - lxd/db/storage/pools: Adds StoragePoolState type and updates state constants to be of that type
   - lxd/db/storage/pools: Adds StoragePoolNode type
   - lxd/db/storage/pools: StoragePoolState usage
   - lxd/db/storage/pools: Adds storagePoolNodes function
   - lxd/db/storage/pools: Updates storage pool load functions to return nodes
   - lxd/db/storage/pools: Updates storagePoolNodes to return map of StoragePoolNode
   - lxd/db/storage/pools: c.GetStoragePoolInAnyState usage
   - shared/api/storage/pool: Adds storage pool status contants
   - lxd/db/storage/pools: Adds StoragePoolStateToAPIStatus and updates getStoragePool to use it
   - lxd/patches: d.cluster.GetStoragePoolInAnyState usage
   - lxd/api/cluster: d.cluster.GetStoragePoolInAnyState usage
   - lxd/backup/backup/config: c.GetStoragePool usage
   - lxd/daemon/storage: s.Cluster.GetStoragePool usage
   - lxd/device/disk: d.state.Cluster.GetStoragePool usage
   - lxd/instance/post: d.cluster.GetStoragePool usage
   - lxd/instances/post: d.cluster.GetStoragePoolInAnyState usage
   - lxd/storage/pools: d.cluster.GetStoragePoolInAnyState usage
   - lxd/storage/volumes/snapshot: d.cluster.GetStoragePool usage
   - lxd/storage/pool/interface: Adds Description, Status and LocalStatus functions to definition
   - lxd/storage/backend/mock: Adds Description, Status and LocalStatus functions
   - lxd/storage/backend/lxd: Adds Description, Status, LocalStatus functions and adds nodes property
   - lxd/storage/load: state.Cluster.GetStoragePoolInAnyState usage and populates pool nodes in GetPoolByName
   - lxd/storage/pool/interface: Adds IsUsed and Create functions
   - lxd/storage/backend/lxd: Exports Create and adds IsUsed
   - lxd/storage/backend/mock: Adds IsUsed and Create
   - lxd/storage/load: Deprecates CreatePool
   - lxd/storage/load: Updates CreatePool to initialise empty node list
   - lxd/db/migration/test: cluster.GetStoragePool usage
   - lxd/storage/pools: Removes unused storagePoolValidateClusterConfig, storagePoolClusterConfigForEtag, storagePoolClusterFillWithNodeConfig functions
   - lxd/storage/pools/utils: Removes unused storagePoolUpdate
   - lxd/api/cluster: Updates client type usage to new package
   - lxd/storage/load: Updates deprecated CreatePool to use client type
   - lxd/patches: storagePools.CreatePool usage
   - lxd/storage/pool/interface: Replaces localOnly and driverOnly indicators with clientType
   - lxd/storage/backend/mock: Replace localOnly and driverOnly with clientType
   - lxd/storage/drivers/driver/ceph: Simplify Delete logic
   - lxd/api/cluster: Removal special casing for ceph/cephfs
   - lxd/storage/backend/lxd: Adds protection against using a pending pool
   - lxd/storage: Adds target support to cmdStorageGet
   - lxd/storage/pools: Updates storagePoolsPostCluster to only forward non-node specific config
   - shared: Add IsUserConfig() utility function
   - lxd/config: Allow user keys in server config
   - lxd/storage/backend/lxd: Comment typo fix
   - lxd/storage/drivers/driver/btrfs/volumes: Enable allowUnsafeResize in CreateVolume when creating initial image volume
   - lxd/storage/drivers/utils: Updates ensureVolumeBlockFile to return unsupported when trying to resize image volume without allowUnsafeResize enabled
   - lxd/storage/utils: Ensure pool's volume.size is checked when unpacking images to pools that use file based images
   - lxd/instance/qemu: Deref OVMF path
   - lxc: Clarify --compression option
   - doc/image-handling: Update compression details
   - i18n: Update translation templates
   - lxd/rbac: Fix checks by matching proper name
   - api: Add resources_network_usb and resources_disk_address
   - shared/api: Add PCIAddress/USBAddress on network and storage
   - lxd/resources: Add PCIAddress/USBAddress for networks and disks
   - lxd/storage/drivers/utils: Modifies roundVolumeBlockFileSizeBytes to round up
   - lxd/storage/drivers/utils: roundVolumeBlockFileSizeBytes usage
   - lxd/storage/drivers/driver/zfs/utils: Use roundVolumeBlockFileSizeBytes in createVolume
   - lxd/storage/drivers/driver/zfs/volumes: Use roundVolumeBlockFileSizeBytes in CreateVolume
   - lxd/storage/drivers/driver/zfs/volumes: Use roundVolumeBlockFileSizeBytes in SetVolumeQuota
   - lxd/storage/backend/lxd: Use revert in CreateInstanceFromCopy
   - lxd/storage/backend/lxd: Don't fail in DeleteInstance if DB record already removed
   - lxd/instance: Use revert in instanceCreateAsCopy
   - lxd/storage/drivers/driver/ceph/volumes: Whitespace
   - lxd/storage/drivers/driver/ceph/volumes: Adds a hasVolume function that accepts an RBD volume name
   - lxd/storage/drivers/driver/ceph/volumes: Fixes issue in DeleteVolume that prevented image volume deletion if no readonly snapshot existed
   - lxd/storage/backend/lxd: Return error in EnsureImage when cannot delete orphaned volume
   - doc/networks: Mention DNSSEC setting
   - lxd/storage/pools/utils: Updates storagePoolCreateLocal to mark local node state as created
   - lxd/db/storage/pools: Removes unused function StoragePoolErrored
   - lxd/storage/pools: Adds doStoragePoolUpdate function
   - lxd/storage/pools/utils: Updates storagePoolCreateLocal to use GetPoolByName
   - lxd/storage/pools: Reworks storagePoolDelete to only delete locally if node has created state
   - lxd/storage/pools: Reworks storagePoolPut and calls storagePoolPut from storagePoolPatch
   - lxd/storage/backend/lxd: Reworks Update to only apply changes to local node if not pending
   - lxd/storage/backend/lxd: Replace localOnly and driverOnly with clientType
   - lxd/storage/pools: Switch to clientType
   - lxd/storage/pools/utils: Switch to clientType
   - lxd/db/storage: Hardcode unknown node state
   - tests: Add test for import after deleted snapshot
   - lxd/instances: Update backup file when deleting a snapshot
   - lxd/instance/lxc: Fix backup.yaml delete logic to trigger properly
   - lxd/instance/qemu: Also update backup.yaml on snapshot delete
   - lxd/instance/qemu: Update backup.yaml on startup
   - lxd/db/storage/pools: Comment wrapping
   - lxd/storage/backend/lxd: Prevent modification of source field on non-pending nodes
   - lxd/storage/drivers/driver/lvm: Comment typo
   - lxd/apparmor/qemu: Allow ceph snap paths
   - lxd/network/network/interface: Adds Project function
   - lxd/network/driver/common: Adds Project function
   - lxd/network/driver: Always delete when requested, ignore LocalStatus() pending
   - lxc/networks: Remove revert removal on failure of clustered network in networksPost
   - lxd/networks: Allow re-create of pending network when pending nodes already exist in networksPost
   - lxd/networks: Adds revert to doNetworksCreate
   - shared/api: Fix typo
   - shared/api: Add NetworkStateVLAN
   - lxd/resources: Add VLAN struct
   - api: Add network_state_vlan
   - lxd/instance/qmp: Update for go-qmp change
   - lxd/backup: Fix URL in lifecycle events
   - Add DeepSource config
   - Use result of type assertion to simplify cases
   - Replace .Sub(time.Now()) with time.Until() handler
   - Remove unnecessary fmt.Sprintf() on string
   - Omit comparison with boolean constant
   - lxd/network/driver/common: Remove cluster notification and DB record removal from delete() function
   - lxd/networks: Moves cluster notification an DB record removal into networkDelete
   - lxd/db/networks: Adds duplicate key detection to getNetworkConfig
   - lxd/instance/drivers/qmp/monitor: Handle closed event channel from qmp package in run
   - lxd/instance/drivers/driver/qemu: Logs when instance is stopped in getMonitorEventHandler
   - lxd/instance/operationlock: Fixes deadlock caused by call to Reset in Create
   - lxd/instance/operationlock: Store operation in instanceOperations before calling go routine
   - lxd/instance/operationlock: Exit go routine started in Create when the operation is done
   - lxd/device: allow adding proxy device to VM instances
   - lxd/instance/drivers: run device post-start hooks in QEMU driver
   - doc: update `proxy` doc to reflect VM support
   - lxd/device/nic/routed: Switches to network.InterfaceExists for clarity
   - lxd/device/nic/routed: Remove host side veth interface if exists in postStop
   - lxd/db/networks: Changes UpdateNetwork to not set created status
   - lxd/networks: Updates doNetworksCreate to accept a Network rather than load its own
   - lxd/networks: Debug log consistency in doNetworksCreate
   - lxd/networks: doNetworksCreate usage
   - lxd/networks: When auto creating pending nodes, don't pass global config into DB function in networksPost
   - lxd/networks: Adds networkPartiallyCreated helper function
   - lxd/networks: Updates networksPostCluster to detect existing global config and skip create if already exists
   - lxd/api/cluster: Skip non-created networks when joining
   - lxd/device/nic: Don't allow NICs to use networks that are not created
   - lxd/db/networks: Renames ClusterTx GetNonPendingNetworks to GetCreatedNetworks
   - lxd/db/networks: Renames Cluster GetNonPendingNetworks to GetCreatedNetworks
   - lxd/api/cluster: cluster.GetCreatedNetworks usage
   - lxd/networks: s.Cluster.GetCreatedNetworks usage
   - lxd/patches: tx.GetCreatedNetworks usage
   - lxd/db/networks: Tighten restrictions in CreatePendingNetwork to only allow pending nodes to be added while network is pending
   - lxd/networks: Allow single node cluster network create using --target
   - lxd/storage/pools/utils: Debug log consistency in storagePoolCreateLocal
   - lxd/db/storage/pools: Adds duplicate key detection to getStoragePoolConfig
   - lxd/storage/pools: storagePoolsPost comments line width
   - lxd/db/storage/pools: Adds StoragePoolErrored function
   - lxd/db/storage/pools: Renames GetNonPendingStoragePoolNames to GetCreatedStoragePoolNames
   - lxd/api/cluster: cluster.GetCreatedStoragePoolNames usage
   - lxd/storage: s.Cluster.GetCreatedStoragePoolNames usage
   - lxd/storage/pools: Restructures storagePoolsPost to align with networksPost
   - lxd/storage/pools: Updates storagePoolsPostCluster to reject global config on re-create attempts
   - lxd/storage/pools: Adds storagePoolPartiallyCreated function
   - lxd/db/storage/pools: Improve errors in CreatePendingStoragePool
   - stable-4.0: Remove debug/accidental files
   - lxd/db/networks: Corrects comment on GetCreatedNetworks
   - lxd/networks: Prevent re-create attempts on errored networks
   - lxd/networks: Don't allow config modification on errored networks in networkPut
   - lxd/network/driver/bridge: Don't apply updates to node when network is pending
   - lxd/storage/pools: Prevent re-create attempts on errored pools
   - lxd/storage/backend/lxd: Prevent changing pool node source if pool state isn't pending
   - lxd/storage/backend/lxd: Only apply local node changes if both pool and node status are not pending
   - lxd/storage/pools: Dont allow config modification on errored pools in storagePoolPut
   - test/suites/clustering: Adds adapted tests for stable-4.0 clustered storage setup
   - test/suites/clustering: Adds adapted tests for stable-4.0 clustered network setup
   - shared/util: Adds StringHasPrefix function
   - lxd/device/disk: Adds sourceIsLocalPath function
   - lxd/device/disk: Use shared.StringHasPrefix when validating ceph/cephfs prefixes
   - lxd/device/disk: Use d.sourceIsLocalPath when validating source host path exists
   - lxd/instance/qemu: Enable multiqueue on tap NICs
   - lxd/instance/qemu: Use a minimum of 2 network queues
   - lxd/storage/drivers/driver/zfs/volumes: Error quoting in RestoreVolume
   - lxd/storage/backend/lxd: Don't fail in DeleteInstanceSnapshot if volume DB record already deleted
   - lxd/storage/backend/lxd: Fix deleting subsequent snapshots for ZFS in RestoreInstanceSnapshot
   - lxd/instances/post: Use source.Project when loading instance to get instance type in containersPost
   - lxd/instances/post: Error quoting in containersPost
   - lxd/instances/post: Add comment about default instance type for migration in containersPost
   - lxd/instances/post: Populate req.Source.Project with project.Default if not specified in containersPost
   - test/suites/projects: Adds tests for copying snapshot to another project
   - lxd/instances/post: Rename project to targetProject to differentiate between source.Project in containersPost
   - lxd/instances/project: Import project package normally and rename project var to projectName
   - doc/image-handling: Fix typo
   - shared/proxy: Support CIDR ranges in `no_proxy`
   - simplestreams: Drop duplicated slash
   - lxd/instance/drivers/qmp: Fix race in Disconnect
   - test/suites/static/analysis: Fixes ineffassign usage due to upstream changes
   - lxd/instance: Copy snapshot expiry in instanceCreateAsCopy
   - lxd/migration: Rebuilds protobuf using protoc v3.14 and latest google.golang.org/protobuf/cmd/protoc-gen-go
   - lxd/migration: Adds expiry_date field to snapshots protobuf
   - lxd/migrate/instance: Populate expiry date in snapshotToProtobuf
   - lxd/migrate/storage/volumes: Populate zero expiry date in volumeSnapshotToProtobuf
   - lxd/storage/migration: Populate expiry date in snapshotProtobufToInstanceArgs
   - lxd/migration/migration/volumes: Updates TypesToHeader and MatchTypes to use a pointer to MigrationHeader
   - lxd/migrate/instance: Avoid copying migration.MigrationHeader due to new internal state lock added by protobuf
   - lxd/migrate/storage/volumes: Avoid copying migration.MigrationHeader due to new internal state lock added by protobuf
   - lxd/migrate/instance: Fix snapshotToProtobuf to not use loop pointer for device name
   - lxd/storage/migration: Conistently use accessor functions in snapshotProtobufToInstanceArgs
   - test/suites/snapshots: Adds test for local copy of snapshot expiry date
   - test/suites/migration: Adds test for copying snapshot expiry date during migration
   - test/suites/migration: Adds test to ensure snapshot devices are copied during migration
   - lxd/storage/quota/projectquota: Consistent comment endings and error quoting
   - lxd/storage/drivers/driver/dir/utils: Updates setQuota to remove old quota if volID has changed
   - lxd/storage/drivers/driver/dir/utils: Modifies setupInitialQuota to not use initQuota
   - lxd/api/internal: Updates internalImportFromRecovery to reinitialise root disk quota
   - lxd: Rename Operation types
   - lxd/db: Rename operation type descriptions
   - lxd/network/network/interface: Adds handleDependencyChange function
   - lxd/network/driver/common: Adds notifyDependentNetworks function and no-op placeholder handleDependencyChange function
   - lxd/resources: Always initialize lists
   - lxd/storage/utils: Improves error message in VolumeUsedByExclusiveRemoteInstancesWithProfiles
   - lxd/db/instances: Updates InstanceList to accept filter to pass to GetInstances()
   - lxd/db/instances: Clarifies comment and arg name on GetLocalInstancesInProject
   - lxd/db/instances/test: cluster.InstanceList usage
   - lxd/storage/utils: s.Cluster.InstanceList usage
   - lxd/patches: InstanceList usage
   - lxd/network/network/utils/sriov: Adds SR-IOV allocation functions
   - lxd/network/network/utils/sriov: Updates SRIOVGetHostDevicesInUse to use InstanceList()
   - lxd/network/network/utils/sriov: Adds network usage support to SRIOVGetHostDevicesInUse
   - lxd/network/network/utils/sriov: SRIOVGetHostDevicesInUse usage
   - lxd/network/network/utils/sriov: Updates SRIOVFindFreeVirtualFunction args to not need Device
   - lxd/network/network/utils/sriov: Adds SRIOVGetVFDevicePCISlot function
   - lxd/network/network/utils: Adds InterfaceBindWait function
   - lxd/device/pci: Adds PCI device management package
   - lxd/device/infiniband/sriov: SRIOV network function usage
   - lxd/device/nic/physical: Use pci package
   - lxd/device/gpu: Use pci package
   - lxd/device/nic/sriov: network.InterfaceBindWait
   - lxd/device/nic/sriov: Use pci package
   - lxd/device/nic/sriov: SRIOV network function usage
   - lxd/device/nic/sriov: Comment clarity in setupSriovParent
   - lxd/device/nic/sriov: Removes networkGetVFDevicePCISlot function
   - lxd/device/device/utils/generic: Removes pci functions
   - lxd/device/device/utils/network: Removes networkInterfaceBindWait function
   - lxd/device/device/utils/instance: Removes instanceGetReservedDevices function
   - lxd/network/driver/bridge: Comment improvements
   - lxd/init: Clarify https listener question
   - client: Fix output of GetClusterMemberNames
   - openvswitch/ovs.go: Simplify return in Installed method
   - rbac/server.go: Sleep for seconds instead of nanoseconds
   - lxd/instance/drivers/driver/qemu: Updates SaveConfigFile to return nil
   - lxd/api/internal: Updates internalImportFromRecovery to call inst.SaveConfigFile
   - test/suites/backup: Adds test to check exec works after recovery of running container
   - cluster/raft/file_snapshot.go: defer after checking error
   - lxd/storage/drivers/driver/cephfs/volumes: Updates RenameVolume newName arg to newVolName to bring inline with other drivers
   - lxd/storage/drivers/driver/ceph/volumes: Fix UnmountVolume to actually deactivate VM block volumes
   - lxd/storage/drivers/driver/ceph/volumes: Fix RenameVolume to also rename FS volume for VM volumes
   - lxc/network: Adds support for attaching instance to a managed network using `network` property
   - test/suites/container/devices/proxy: Ensure ipv6 nat tests use a network with stateful DHCPv6 enabled
   - test/suites/network: Updates static IPv6 allocation test to actually test stateful DHCPv6
   - test/suites/container/devices/nic/bridged: Improve validation of DHCPv6 allocation
   - lxc/query: Prevent using --project
   - i18n: Update translation templates
   - lxd/utils: Compare all addresses from lookup in IsAddressCovered, lxc#8340
   - lxd/resources: Support DMI for CPU information
   - lxd/device/nic/routed: Ensure IP neighbour proxy entries are removed on stop
   - lxd/device/nic/routed: Adds duplicate address detection
   - lxd/device/disk: Validate size field properly
   - lxd/device/nic/bridged: Only attempt to release DHCP leases if bridge interface exists
   - lxd/device/nic/bridged: Improve error context prefix in networkClearLease
   - lxd/device/nic/bridged: Use %q for error quoting in networkClearLease
   - lxd/device/nic/bridged: Improve error context prefix in State
   - lxd/instance: Fix progress on ceph instance move
   - lxd/storage/backend/lxd: Use volume config in UpdateInstanceBackupFile so that volume.block.filesystem setting is used
   - lxd/storage/drivers/utils: Adds filesystem being used to TryMount error
   - lxd: Smarter handling of volatile keys in projects
   - lxd/project: Strip volatile on copy/migrate
   - tests: Update project restrictions test
   - lxd/instance/drivers/driver/lxc: Umount instance after CRIU state path check in Restore
   - lxd/instance/drivers/driver/lxc: Avoid duplicated call to UpdateBackupFile in Restore
   - lxd/instance/drivers/driver/lxc: Log instance restarting after snapshot restore
   - lxd/instance/drivers/driver/lxc: Always run UpdateBackupFile in Update
   - lxd/instance/drivers/driver/qemu: Removes unnecessary call to UnmountInstance in Restore
   - lxd/instance/drivers/driver/qemu: Remove unnecessary call to UpdateBackupFile
   - lxd/instance/drivers/driver/qemu: Log instance restarting after snapshot restore
   - lxd/instance/drivers/driver/lxc: Copy parent volume config to snapshot volume config in lxcCreate
   - lxd/instance/drivers/driver/qemu: Copy parent volume config to snapshot volume config in qemuCreate
   - doc/rest-api: Fix typo
   - doc/rest-api: Fix missing escaping
   - lxd/instance: Tweak error and resource links
   - client: Adds support for bulk instance state change.
   - test/suites/snapshots: Adds snapshot block.filesystem config check for LVM & Ceph
   - shared/api: Adds support for bulk instance state change.
   - shared/api: Change mass update API
   - client: Re-order functions
   - lxd: Rename container functions
   - lxd/instance_state: Simplify
   - lxd/instance: Refactor state handling
   - lxd/instance/drivers: Move ephemeral restart logic
   - lxd/db/instances: Improve error message from CreateInstanceConfig
   - lxd/instance/drivers/driver/common: Adds insertConfigkey function
   - lxd/instance/drivers/driver/lxc: Updates FillNetworkDevice to use d.insertConfigkey
   - lxd/instance/drivers/driver/qemu: Updates FillNetworkDevice to use d.insertConfigkey
   - lxd/vm: Expose ISO images as SCSI cdroms
   - lxd/storage: Cleanup CreateInstanceFromCopy
   - lxd/storage/utils: Updates VolumeDBCreate to accept volume and content type typed arguments
   - lxd/storage/backend/lxd: Error quoting and wrapping
   - lxd/storage/backend/lxd: Expand argument type in updateVolumeDescriptionOnly
   - lxd/storage/backend/lxd: VolumeDBCreate updated usage
   - lxd/instance/drivers/driver/lxc: Fix volatile config key scoping issue in FillNetworkDevice
   - lxd/instance/drivers: Detect failed volatile key generation
   - lxc/instance/drivers/driver/common: Removes empty value check from insertConfigkey
   - lxd/instance/drivers/driver/common: Prevent existing row check from wiping out desired key value in insertConfigkey
   - lxd/instance/drivers: More checks and error contexts in FillNetworkDevice
   - lxd/db/query/retry: Adds detection of checkpoint in progress to IsRetriableError
   - lxd/instance/drivers/driver/qemu: Error alignment with container driver in Rename
   - lxd/storage/utils: Improves error in VolumeDBCreate
   - lxd/db/storage/volumes: Populates ProjectName field in GetLocalStoragePoolVolumeSnapshotsWithType
   - lxd/instance/drivers/driver/lxc: Error context in Rename
   - lxd/instances/post: Unwraps long error and using double quotes placeholder
   - lxd/instance/instance/interface: Adds TemplateTrigger type and constants for template trigger types
   - lxd/instance: Adds instanceCreateAsCopyOpts argument for instanceCreateAsCopy options
   - lxd/instances/post: instanceCreateAsCopy updated usage
   - lxd/instance/instance/interface: Updates DeferTemplateApply to accept TemplateTrigger type argument
   - lxd/instance/drivers/driver/common: Updates DeferTemplateApply to accept a TemplateTrigger type argument
   - lxd/storage/backend: inst.DeferTemplateApply usage
   - lxd/instances/post: inst.DeferTemplateApply usage
   - lxd/instance/drivers/driver/lxc: Updates templateApplyNow to accept a TemplateTrigger argument
   - lxd/instance/drivers/driver/lxc: d.templateApplyNow usage
   - lxd/instance/drivers/driver/qemu: Updates templateApplyNow to accept a TriggerTemplate type argument
   - lxd/instance/drivers/driver/qemu: d.templateApplyNow usage
   - lxd/instance/instance/interface: Adds applyTemplateTrigger argument to Rename
   - lxd/instance/drivers/driver/lxc: Adds applyTemplateTrigger argument to Rename
   - lxd/instance/drivers/driver/qemu: Adds applyTemplateTrigger argument to Rename
   - lxd/instance/post: inst.Rename usage
   - lxd/instance/snapshot: sc.Rename usage
   - lxd/storage/backend/lxd: Removes call to deferred template apply in RenameInstance
   - lxd/instance/test: c.Rename usage
   - shared/api: Add Pool field to InstancePost
   - client: Add extension check for pool migration
   - test: Add tests for volatile.apply_template config during create, copy and move
   - test: Adds check for volatile.apply_template state after rename
   - test: Add test for moving instance between pools without renaming
   - lxd/images: Skip keys with empty values
   - lxd/device: Fix instance type validations
   - shared/instance: Adds ErrNoRootDisk error var and returns it from GetRootDiskDevice
   - lxd/instance: Enforces that target instance should have valid root disk config after DB create in instanceCreateAsCopy
   - lxd/instance: Don't assume root disk is called "root" when copying snapshots from a source instance
   - lxd/instance/drivers/driver_qemu: attempt to kill qemu proc on stop
   - lxd/instance/driver_qemu: Add check for qemu cmdline args to pid()
   - forkproxy: prevent zombies
   - lxd: Change some references of container to instance in comments
   - lxd/instance/post: Change error message to instance from container in instancePost
   - lxd/main/forkdns: Returns empty AAAA record response when equivalent A record exists
   - lxd/main/forkdns: Fixes typo in comment
   - test: Adds test for empty AAAA response when equivalent A record exist in clustering forkdns
   - lxd/device/pci: Consider DeviceUnbind successful on missing driver
   - shared/validate: Validate PCI addresses
   - lxd/device/gpu: Validate PCI addresses
   - lxd/device: Add function to validate PCI path
   - lxd/device: Add support for GPU SR-IOV
   - api: gpu_sriov extension
   - doc: Add SR-IOV GPU
   - lxd/device/gpu_mdev: Valdiate PCI address and path
   - lxd/device/gpu_physical: Validate PCI address and path
   - lxd/instance/qemu: Cleanup VGA ROM check
   - lxd/network/driver/bridge: Update DHCPv4Subnet to return fan bridge address subnet when in fan mode
   - lxd/device/nic/bridge: Updates validateConfig to use parent networks DHCP subnet functions when validating address
   - Revert "test: Add test for moving instance between pools without renaming"
   - tests: Fix for stable-4.0
   - shared/termios: Fix static builds
   - shared/idmap: Fix shared/ build on non-cgo
   - shared/instancewriter/: Fix shared/ build on non-cgo
   - shared/eagain: Restrict to Linux
   - shared/subprocess: Restrict to unix
   - lxd/db/generate: Move DB generator
   - github: Replace Travis and Appveyor with Actions
   - README: Update for 4.0
   - lxc/manpage: Add markdown, reST and YAML output
   - i18n: Update translation templates
   - lxd/device/gpu: Skip nvidia directories
   - lxd/device: Free up the pci name
   - lxd/device: Support for both pci= and address= in checker
   - lxd/device/pci: Add NormaliseAddress
   - lxd/device: Have validatePCIDevice take an address
   - lxd/instance/qemu: Rename qemuNetDevPhysical to qemuPCIPhysical
   - cgroup: fix cgroup2 device driver settings

  ### Try it for yourself
  This new LXD release is already available for you to try on our [demo service](https://linuxcontainers.org/lxd/try-it/).

  ### Downloads
  The release tarballs can be found on our [download page](https://linuxcontainers.org/lxd/downloads/).

  Binary builds are also available for:

   - **Linux:** snap install lxd
   - **MacOS:** brew install lxc
   - **Windows:** choco install lxc
