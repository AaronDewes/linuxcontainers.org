title: LXD 4.0.7 リリースのお知らせ
date: 2021/07/17 03:07
origin: https://discuss.linuxcontainers.org/t/lxd-4-0-7-has-been-released/11620
content: |-
  ### はじめに <!-- Introduction -->
  <!--
  The LXD team is pleased to announce the release of LXD 4.0.7!
  -->
  LXD チームが LXD 4.0.7 のリリースをお知らせします!

  <!--
  This is the seventh bugfix release for LXD 4.0 which is supported until June 2025.
  -->
  このリリースは、2025 年 6 月までサポートされる LXD 4.0 に対する 7 つめのバグフィックスリリースです。

  ### バグ修正と改良 <!-- Bugfixes and improvements -->
  <!--
  This release includes a couple of months worth of bugfixes and minor improvements from the development branch.
  -->
  このリリースには、開発ブランチからの数カ月分のバグフィックスと細かな改善が含まれています。

  <!--
  Some of the highlights include:
  -->
  主な変更点は次の通りです:

   - トークンベースのクラスター加入 <!-- Token based cluster join -->(`lxc cluster add`)
   - クラスターメンバーの説明（description）フィールド <!-- Cluster member description field -->
   - シャットダウンタイムアウトの設定が可能に <!-- Configurable shutdown timeout -->(`core.shutdown_timeout`)
   - 信頼できる内向き（inbound）プロキシーのリクエスト元情報 <!-- Trusted inbound proxy requestor information -->(`core.https_trusted_proxy`)
   - クラスター証明書の更新 <!-- Cluster certificate update -->(`lxc cluster update-certificate`)
   - プロジェクト間のカスタムストレージボリュームのコピー・移動 <!-- Cross-project custom storage volume copy/move -->
   - サポートするストレージドライバーの詳細情報 <!-- Detailed information on supported storage drivers -->(`lxc info`)
   - ライフサイクルイベント中にリクエスト元アドレス <!-- Requestor address in lifecycle events -->
   - ライフサイクルイベントの追加（全てカバー） <!-- Additional lifecycle events (full coverage) -->

  <!--
  Those are all smaller improvements backported from LXD feature releases which required no database changes or API behavior changes and were considered a sufficient usability improvement to backport to the LTS release.
  -->
  これらはすべてデータベースの変更や API の動作の変更が不要な、LTS リリースにバックポートするのに十分使い勝手が改善されると判断した、LXD のフィーチャーリリースからバックポートした小さな改良です。

  <!--
  The full list of commits is available below:
  -->
  コミットの全リストは次の通りです（翻訳なし）:

   - lxd/networks/utils: Log forkdns refresh task starting in networkUpdateForkdnsServersTask
   - lxd/db/node: Adds certificates table to local database
   - lxd/db/certificates: Adds GetCertificates function
   - lxd/db/certificates: Adds DeleteCertificateByNameAndType function
   - lxd/certificates: Fix import ordering
   - lxd/certificates: Updates updateCertificateCache to handle per-certificate upgrade
   - lxd/db/certificates: Adds ReplaceCertificates function
   - lxd/certificates: Updates updateCertificateCache to handle per-certificate upgrade
   - lxd/certificates: Adds updateCertificateCacheFromLocal function
   - lxd/certificates: Notify other cluster members of certificate update in doCertificateUpdate
   - lxd/certificates: Notify other cluster members of certificate deletion in certificateDelete
   - lxd/certificates: Allow certificate type change in doCertificateUpdate
   - lxd/certificates: cluster.ErrCertificateExists and serverCert usage in certificatesPost
   - lxd/daemon: Adds serverCert and serverCertInt vars
   - lxd/daemon: Updates State to populate serverCert
   - lxd/daemon: Load trusted server certs from local DB on startup using updateCertificateCacheFromLocal
   - lxd/daemon: Refresh cached trusted certificates when heartbeat node count changes in NodeRefreshTask
   - lxd/daemon: Pass d.serverCert and networkCert to startClusterTasks Add
   - lxd/daemon: Updates Authenticate to check trusted server certs
   - lxd/state: Updates NewState to have a serverCert and updateCertificateCache arg
   - lxd/state: Update tests with NewState usage
   - lxd/util/http: Updates CheckTrustState to use networkCert argument
   - lxd/cluster/notify: Update NewNotifier to accept networkCert and serverCert args
   - lxd/cluster/tls: Update tlsClientConfig to accept networkCert and serverCert
   - lxd/cluster/tls: Updates tlsCheckCert to accept networkCert and serverCert
   - lxd/cluster/connect: Adds ErrCertificateExists var
   - lxd/cluster/connect: Updates Connect to accept networkCert and serverCert args
   - lxd/cluster/connect: Updates SetupTrust to accept serverName arg
   - lxd/cluster/connect: Adds UpdateTrust function
   - lxd/cluster/connect: Updates HasConnectivity to accept networkCert and serverCert
   - lxd/cluster/events: Updates events functions to accept networkCert and serverCert
   - lxd/cluster/gateway: Store networkCert and serverCert in Gateway and update NewGateway
   - lxd/cluster/gateway: Updates HandlerFuncs to accept trustedCerts function
   - lxd/cluster/gateway: HasConnectivity usage
   - lxd/cluster/gateway: Update Reset to handle networkCert
   - lxd/cluster/gateway: tlsClientConfig usage
   - lxd/cluster/gateway: loadInfo usage
   - lxd/cluster/heartbeat: tlsClientConfig in Send and Heartbeat
   - lxd/cluster/upgrade: Updates NotifyUpgradeCompleted with networkCert and serverCert args
   - lxd/cluster/membership: Adds EnsureServerCertificateTrusted function
   - lxd/cluster/membership: Updates Bootstrap to store serverCert in trusted certificates table
   - lxd/cluster/membership: Update Join to handle per-server certificates
   - lxd/cluster/membership: Updates notifyNodesUpdate to handle serverCert
   - lxd/cluster/membership: HasConnectivity usage
   - lxd/cluster/membership: Update Purge to remove trusted server certificate
   - lxd/cluster: Update tests to work with changes
   - lxd/api: d.gateway.HandlerFuncs usage
   - lxd/api/cluster: Updates clusterPutJoin to handle per server certificates
   - lxd/api/cluster: d.gateway.Reset usage
   - lxd/api/cluster: Call updateCertificateCache in clusterNodeDelete after certificate removed
   - lxd/api/cluster/test: server name as cert name
   - lxd/main/init: state.NewState usage
   - lxd/main/init/interactive: cluster.SetupTrust usage and serverCert naming for consistency
   - lxd: cluster.NewNotifier usage
   - lxd: cluster.Connect and related function usage
   - lxd/patches: Adds patchClusteringServerCertTrust
   - lxd/certificates: NewNotifier usage
   - doc/clustering: Update guide to show that cluster.crt on bootstrap member should be used
   - test: Add check for trusted server certificate removal on cluster member removal
   - test: Update table count check to account for local certificates table
   - lxd/images: Specify image type during distribution
   - client/connection: Correct HTTPs to HTTPS in ConnectPublicLXD
   - lxd/operations: Clarify return values in comment on Render
   - lxd/db/operations: Adds GetOnlineNodesWithRunningOperationsOfType function
   - lxd/operations: Adds operationCancel function
   - lxd/operations: Adds operationsGetByType function
   - lxd/images: Updates imageValidSecret to accept projectName and opType arguments
   - lxd/images: projectName argument in createTokenResponse
   - lxd/images: imageValidSecret usage
   - lxd/operations: Updates operationsGet to use projectName when retrieving remote operations
   - lxd/operations: Updates operationsGetByType to use projectName when retrieving remote operations
   - lxd/instances: Swagger for logs
   - lxd/instances: Update error message
   - lxd/instances: Swagger for files
   - doc/rest-api: Refresh swagger YAML
   - shared/api: Add swagger metadata for instance exec
   - lxd/instances: Swagger for exec
   - lxd/swagger: Fix json name of metadata
   - shared/api: Add swagger metadata for instance state
   - lxd/instances: Swagger for state
   - shared/api: Add swagger metadata for instance console
   - lxd/instances: Swagger for console
   - shared/api: Add swagger metadata for instances
   - lxd/instances: Swagger for instance
   - doc/rest-api: Refresh swagger YAML
   - lxd/instance/qmp: Switch to query-cpus-fast
   - lxd/apparmor: Respect LXD_OVMF_PATH
   - lxd/daemon: Improved logging in NodeRefreshTask
   - lxd/db/operations: Import ordering
   - lxd/db/operations/types: Adds OperationClusterJoinToken type
   - lxd/db/operations: Replace GetOnlineNodesWithRunningOperationsOfType with GetOperationsOfType
   - lxd/operations: Updates operationCancel with correct remote address
   - lxd/operations: Fixes operationsGetByType to filter operations by type correctly
   - lxd/node/raft/test: Corrects typo
   - api: Adds clustering_join_token extension
   - shared/api/cluster: Adds ClusterMembersPost type
   - shared/api/cluster: Adds ClusterMemberJoinToken type
   - lxd/api/cluster: Adds clusterNodesPost handler
   - client/interfaces: Adds CreateClusterMember function to interface
   - client/lxd/cluster: Adds CreateClusterMember function
   - lxc/cluster: Add lxc cluster add command
   - lxd/certificates: Adds clusterMemberJoinTokenValid and clusterMemberJoinTokenDecode functions
   - lxd/certificates: Updates certificatesPost to check supplied password against active cluster join token operations
   - lxd/main/init/interactive: Adds join token support to askClustering
   - lxc/cluster: Adds cluster list-tokens command
   - lxc/cluster: Adds clusterJoinTokenOperationToAPI function
   - lxd/operations: Updates OperationClass.String() to use constants from shared/api
   - shared/api/operations: Adds operation class name constants
   - doc/clustering: Adds details on using the join token during adding cluster members
   - test: Adds overridable join secret to spawn_lxd_and_join_cluster
   - test: Adds join token tests to clustering_membership
   - test: Increase the offline thresholds to above 12 as heartbeat interval is hardcoded to 10
   - doc/rest-api: Refresh swagger YAML
   - Makefile: Set GO111MODULE=on for update-api swagger build
   - shared/api: Fix snapshot structs
   - lxc/config: Update following InstanceSnapshotPut fix
   - shared/api: Add swagger metadata for instance snapshots
   - lxd/instances: Swagger for snapshots
   - doc/rest-api: Refresh swagger YAML
   - shared/units: Add GetByteSizeStringIEC
   - api: clustering_description
   - shared/api: Add cluster member description
   - lxd: Expose cluster member description
   - Revert "test: Increase the offline thresholds to above 12 as heartbeat interval is hardcoded to 10"
   - api: Adds description back for clustering_join_token extension
   - lxd/images: Dont log error in autoSyncImagesTask when not clustered
   - lxd/images: Make logging consistent in autoSyncImagesTask
   - lxd/db/node: Display last heartbeat time in ToAPI
   - lxc: Add -f as shorthand for --format
   - lxd/devices: Allow user.XYZ
   - lxd/db/node: Updates SetNodeHeartbeat to return ErrNoSuchObject if row doesn't exist to be updated
   - lxd/db/query/retry: Use errors.Cause in Retry
   - lxd/cluster/heartbeat: Single call to time.Now() in heartbeat
   - lxd/cluster/heartbeat: Fixes bug in heartbeat that causes heartbeat round to be discarded if member removed during round
   - lxd/cluster/heartbeat: Keep error handling from g.currentRaftNodes together
   - lxd/cluster/heartbeat: Error logging consistency
   - lxd/cluster/heartbeat: Use contextual logging
   - lxd/cluster/events: Improve logging consistency in eventsUpdateListeners
   - lxd/task/group: Adds context arg to Start
   - lxd/task/start: Add context arg to Start
   - lxd/task: Start context usage
   - lxd/daemon: Updates Start functions usage by passing daemon context
   - lxd/images: Improve logging in imageSyncBetweenNodes
   - test: Add lxc cluster list before comparison in test_clustering_handover for visability into cluster state
   - test: Separate stop and publish commands in test_clustering_image_replication
   - lxd/main/init/interactive: Clear config.Cluster.ClusterPassword after setting up trust
   - lxd/images: Improve logging
   - lxd/api/1/0: Whitespace
   - lxd/api/1/0: Update d.gateway.HeartbeatOfflineThreshold when cluster.offline_threshold is changed
   - lxd/cluster/config: Add minThreshold to offlineThresholdValidator
   - lxd/cluster/gateway: Add HeartbeatOfflineThreshold var
   - lxd/cluster/heartbeat: Improve logging and errors in HeartbeatNode
   - lxd/cluster/heartbeat: Actually use taskCtx in HeartbeatNode for HTTP request base
   - lxd/cluster/heartbeat: Don't re-run Update as this throws away discovered node liveness times
   - lxd/cluster/heartbeat: tx.SetNodeHeartbeat to actual last heartbeat time
   - lxd/cluster/heartbeat: Update Send to support dynamic spread duration
   - lxd/cluster/heartbeat: Adds heartbeatInterval function
   - lxd/cluster/heartbeat: Updates HeartbeatTask to use gateway.heartbeatInterval
   - lxd/cluster/heartbeat: Removes heartbeatInterval constant
   - lxd/cluster/heartbeat: Updates heartbeat to use interval derived from offline threshold
   - lxd/daemon: Populate d.gateway.HeartbeatOfflineThreshold on init
   - lxd/daemon: Adds taskClusterHeartbeat var and populates it
   - lxd/cluster/heartbeat: Logging improvements
   - lxc: Update interactive editor fail message to indicate ctrl+c can be used to abort change
   - shared/api: Add swagger metadata for instance backups
   - lxd/instances: Swagger for backups
   - lxd: Support for reading cluster certificate from file
   - doc: cluster_certificate_path documentation
   - shared/api: Add swagger metadata for image metadata
   - lxd/instances: Swagger for instance metadata
   - doc/rest-api: Refresh swagger YAML
   - lxd/images: Fix typo in swagger
   - lxd/network/driver/bridge: Reuse consistent bridgeLink var rather than keep creating new vars
   - lxd/network/driver/bridge: Bring up vxlan tunnel link
   - lxd/network/driver/bridge: Use clearer naming for different link types
   - lxd/network/driver/bridge: Don't use Link suffix for var names that don't represent links
   - lxd/instances: Unmount shiftfs on startup failures
   - lxd/cluster: Add core.shutdown_timeout
   - lxd/api/cluster: Check if LXD closing down in rebalanceMemberRoles
   - lxd/api/cluster: Call rebalanceMemberRoles from internalClusterRaftNodeDelete
   - lxd/cluster/gateway: Logging improvements
   - lxd/daemon: Logging improvements
   - lxd/images: Logging improvements
   - shared/api: Add swagger metadata for instances
   - lxd/instances: Swagger for instances
   - doc/rest-api: Refresh swagger YAML
   - lxd/cluster/gateway: Add heartbeatCancelLock and heartbeatCancel vars
   - lxd/cluster/heartbeat: Introduces heartbeatMode type and constants for heartbeat modes
   - lxd/cluster/heartbeat: Updates heartbeat to accept mode argument
   - lxd/cluster/heartbeat: Make end of heartbeat log message include local address for clarity
   - lxd/cluster/heartbeat: Adds heartbeatRestart function
   - lxd/cluster: g.heartbeat() usage
   - lxd/cluster/gateway: Call g.heartbeatRestart from HandlerFuncs when handling a heartbeat
   - lxd/cluster/heartbeat/test: Fixes TestHeartbeat so that it waits for join notification heartbeats to occur
   - lxd/daemon/images: imageDownloadLock typo
   - lxd: Support for core.shotdown_timeout
   - doc: Add core.shutdown_timeout
   - lxd/storage/ceph: Always return VolumeUsage
   - doc/production-setup: Cover name leakage
   - lxd/apparmor/instance: Deref OVMF path
   - lxd/instance/drivers/driver/qemu: Adds one missing op.Done call and removes 2 unnecessary ones
   - lxd/instance/drivers/driver/qemu/templates: Correct comment on qemuPCIPhysical
   - lxd/instance/drivers/driver/qemu: Remove old pid file on start if exists
   - lxd/cluster/heartbeat: Fix heartbeatInterval()
   - lxd/instance/qemu: Support for security.devlxd default (true) value
   - doc/environment: Documents LXD_CONF and LXD_GLOBAL_CONF env vars
   - lxd/ip/link: MTU is an acronym and so should be uppercased in SetMtu function name
   - lxd/ip/link: Renames Mtu field to MTU as it is an acronym
   - lxd/device/device/utils/network: SetMTU usage
   - lxd/network/network/utils: Removes InterfaceSetMTU
   - lxd/network/network/utils: Adds InterfaceStatus function
   - lxd/device/infiniband/physical: SetMTU usage
   - lxd/device/infiniband/sriov: SetMTU usage
   - lxd/device/nic/macvlan: SetMTU usage
   - lxd/device/nic/physical: SetMTU usage
   - lxd/device/nic/sriov: SetMTU usage
   - lxd/network/driver/bridge: SetMTU usage
   - lxd/network/network/utils/sriov: Updates sriovGetFreeVFInterface to use InterfaceStatus
   - lxd/instances/get: Renames doContainersGet to doInstancesGet
   - lxd/instances/get: Remove some of the container specific terminology in doInstancesGet
   - lxd/instances/get: Remove potential source of nil pointer dereference panic in doInstancesGet
   - lxd/instance: Don't use RawOperation
   - lxc/storage: Fix bad merge
   - lxd/images: Remove unused function
   - i18n: Update translation templates
   - lxd/device/pci: Adds DeviceIOMMUGroup function
   - lxd/device/nic/physical: Pass pciIOMMUGroup number to VM driver
   - lxd/device/nic/sriov: Pass pciIOMMUGroup number to VM driver
   - lxd/instance/drivers/qmp/commands: Adds AddNIC function
   - lxd/instance/drivers/driver/qemu/templates: Remove NIC specific templates
   - lxd/instance/drivers/driver/qemu: Remove -chroot flag usage
   - lxd/instance/drivers/driver/qemu: Converts NICs to be added via QMP rather than static config
   - lxd/instance/qemu: queues is uint64
   - lxd/instance/drivers/driver/qemu: Don't set multifunction=off as this upsets ccw driver
   - lxd/operations: Remove code duplication
   - lxd/operations: Close forwarded websocket
   - shared/network: Fix channel handling in WebsocketProxy
   - client: Update for WebsocketProxy change
   - lxd/instance/drivers/qmp/commands: Adds Reset function
   - lxd/instance/drivers/driver/qemu: Updates getMonitorEventHandler to handle guest RESET events
   - lxd/instance/drivers/driver/qemu: Workaround QEMU bug that prevents QMP added devices from using their bootindex setting
   - lxc: Use consistent messaging when offering to respawn interactive editor
   - lxd/operations: Spacing
   - lxd/operations: Fix bug in operationsGet and operationsGetByType that was overwriting list entries with loop iterator pointer
   - lxc/cluster: Always use default project in list-tokens command
   - lxd/db: Expose database stand-by role on cluster members
   - lxd/main/init/interactive: Don't attempt to connect to all join token candidates
   - lxd/operations/operations: Use structured logging in Cancel
   - lxd/images: Include operation ID in error in imageValidSecret
   - lxd/certificates: Include operation ID in error in clusterMemberJoinTokenValid
   - lxd/api/cluster: Delete any existing join token operation for potential member in clusterNodesPost
   - shared/subprocess/proc: Add exit code to error message
   - lxd/images: Maintain image public indicator when copying to member in imageSyncBetweenNodes
   - lxd/images: Improve logging in imageSyncBetweenNodes
   - lxd/images: Improve error message in imageSyncBetweenNodes
   - lxd/daemon/images: Adds ImageDownloadArgs type
   - lxd/daemon/images: Updates ImageDownload to accept ImageDownloadArgs argument
   - lxd/images: Updates imgPostRemoteInfo to use d.ImageDownload
   - lxd/images: Updates imgPostURLInfo to use d.ImageDownload
   - lxd/images: Improves error message in imagesPost
   - lxd/images: Updates autoUpdateImage to use d.ImageDownload
   - lxd/instances/post: Updates createFromImage to use ImageDownload
   - lxd/images: Don't generate args for every member in imageSyncBetweenNodes
   - shared/subprocess/proc: Adds context support to Wait
   - lxd/instance/drivers/qemu: p.Wait() usage
   - lxd/network/driver/bridge: Check dnsmasq process remains running after being started
   - shared/subprocess: Fix tests to use p.Wait() with context
   - tests: Support for database stand-by role on cluster members
   - lxd/instance/drivers/qmp/commands: Improve comment on SendFile to aid searchability
   - lxd/instance/drivers/driver/qemu: Only add bootindex if bootIndexes is non-empty
   - lxd/instance/drivers/driver/qemu: bus name is populated later so these lines do nothing
   - lxd/instance/drivers/driver/qemu: Switch to using monitor.SendFile to pass macvlan file descriptor to QEMU
   - lxd/instance/drivers/driver/qemu: Updates addNetDevConfig to remove unused args and allow preconfiguring of port to be used
   - README: Update IRC
   - lxd-agent/main/agent: Log when rebooting
   - lxd-agent/main/agent: Mount shares after vsock listener
   - lxd/device/disk: VM directory share improvements
   - lxd/instance/drivers/driver/qemu/templates: Always use virtfs-proxy-helper for 9p disk directory shares
   - lxd/instance/drivers/driver/qemu: Return consistent error in setupNvram for missing EFI firmware file
   - lxd/instance/drivers/driver/qemu: Log where lxd-agent is being installed from in generateConfigShare
   - lxd/instance/drivers/driver/qemy: Always use virtfs-proxy-helper for 9p directory shares
   - lxd/device/disk: Populate readonly mount option even for block device type disks
   - lxd/instance/drivers/driver/qemu: Convert readonly mount option to readonly template boolean in addDriveConfig
   - lxd/instance/drivers/driver/qemu/templates: Add support for readonly block device disks
   - lxd/instance/drivers/driver/lxc: Add revert to deviceStart
   - lxd/instance/drivers/driver/lxc: Add revert to updateDevices
   - lxd/instance/drivers/driver/qemu: Add revert to updateDevices
   - lxd/instance/drivers/qmp/commands: Adds revert to AddNIC
   - lxd/device/disk: Add DiskVirtiofsdSockMountOpt constant
   - lxd/device/disk: Add vmVirtfsProxyHelperPaths and vmVirtiofsdPaths functions
   - lxd/device/disk: Update startVM to use d.vmVirtiofsdPaths and d.vmVirtfsProxyHelperPaths
   - lxd/device/disk: Comment improvement in startVM
   - lxd/device/disk: Check virtfs-proxy-helper has bound successfully in startVM
   - lxd/device/disk: d.vmVirtiofsdPaths and d.vmVirtfsProxyHelperPaths usage in stopVM
   - lxd/instance/drivers/driver/qemu: Update addDriveDirConfig to handle getting virtiofsd socket path from disk device mount options
   - lxd/instance/drivers/driver/qemu: Improve comments in addDriveDirConfig
   - lxd/instance/drivers/driver/qemu: Ensure bootindex is generated in a stable manner in deviceBootPriorities
   - shared/api: Support for lxc monitor --pretty lifecycle events
   - lxc: Support for lxc monitor --pretty lifecycle events
   - lxd/device/errors: Add UnsupportedError type and update ErrUnsupportedDevType to use it
   - lxd/device/device/utils/disk: Add DiskVMVirtiofsdStart and DiskVMVirtiofsdStop functions
   - lxd/device/disk: Remove unnecessary log context field in startVM
   - lxd/device/disk: Switch to using DiskVMVirtiofsdStart and DiskVMVirtiofsdStop functions for virtiofsd management
   - lxd/instance/drivers/driver/qemu: Switch to using device.DiskVMVirtiofsdStart and device.DiskVMVirtiofsdStop for config drive virtiofsd management
   - lxd/instance/drivers/driver/qemu: Add comment about 9p vs virtio-fs config drive shares in generateQemuConfigFile
   - lxd/instance/drivers/driver/qemu: Clean up comments in removeDiskDevices and removeUnixDevices
   - lxd/apparmor/instance/qemu: Allow rw access to instance devicesPath
   - lxd/apparmor/instance/qemu: Make the difference between external device paths and devices in the instance devices path clearer
   - lxd/instance/qemu: Remove duplicate key
   - lxd/apparmor/instance: Switch to externalDevPaths template var
   - lxd/apparmor/instance: Populate VM devicesPath var
   - lxd/instance/drivers/driver/qemu: Don't add config disk path in the instance's devices directory to the external devPaths var
   - lxc/publish: Fix ETag race condition
   - lxd/storage/drivers/driver/zfs/utils: Retry ZFS recursive delete command
   - tests: Test publishing ephemeral instance
   - lxd/device/device/utils/disk: Adds DiskMountClear function
   - lxd/instance/drivers/driver/qemu: Add configDriveMountPath and configDriveMountPathClear helper functions
   - lxd/instance/drivers/driver/qemu: Comment
   - lxd/instance/drivers/driver/qemu: Improve error in onStop
   - lxd/instance/drivers/driver/qemu: Call device.DiskVMVirtiofsdStop and d.configDriveMountPathClear in cleanupDevices
   - lxd/instance/drivers/driver/qemu: Bind mount config directory into instance devices directory as readonly
   - lxd/instance/drivers/driver/qemu: Clearer var naming in generateQemuConfigFile
   - lxd/instance/drivers/driver/qemu: Update 9p config drive share to use readonly bind mount in generateQemuConfigFile
   - lxd/instance/drivers/driver/qemu: addDriveDirConfig comment tweak
   - lxd/storage/drivers/driver/zfs/volumes: Retry zvol deactivation if ZFS ignores us in UnmountVolume
   - lxd/device/disk: Update startContainer to mount pool volume before calling createDevice
   - lxd/device/disk: Update startVM to mount directories as bind mounts
   - lxd/device/disk: Rename reverter argument to revert in mountPoolVolume for consistency
   - lxd/device/disk: Update createDevice to accept revert and pool volume source path override
   - lxd/device/disk: Ensure that host-side device mounts are cleaned up in postStop
   - lxd/device/disk: Rework wait for virtfs-proxy-helper socket in startVM for clarity
   - lxd/device/disk: Remove check that prevents use of virtiofsd for readonly disks in startVM
   - lxd/instance/drivers/driver/qemu: Remove check in addDriveDirConfig that prevents virtiofsd for readonly shares
   - doc: mention /var/snap/lxd/common/lxd for snap users
   - lxc cluster add shouldn't have any alias
   - lxd: print the join token on a separate line
   - tests: fix token extraction of `lxc cluster add`
   - i18n: Update translation templates
   - lxd/instance/qemu: Remove unused template
   - lxd/lxd: Record requestor as part of lifecycle events
   - lxd: Pass request to OperationCreate
   - lxd-agent: Pass request to OperationCreate
   - lxd/resources: Add swagger documentation for storage
   - shared/api: Add swagger metadata to storage pools
   - lxd/cluster: Add core.https_trusted_proxy
   - lxd/storage: Add swagger documentation for pools
   - shared/api: Split storage volume backup
   - shared/api: Add swagger metadata to storage volumes
   - lxd/storage/drivers/driver/zfs/volumes: Include unmount action in the revert hook returned from CreateVolumeFromBackup
   - lxd/storage/backend/lxd: Improve error context returned when applying imported root disk quota
   - lxd/instances/post: Improve post hook failed context in error
   - lxd/instance/drivers/driver/qemu: Adds start and stop debug logging
   - lxd/instance/drivers/driver/qemu: Clarifies return values of pid function
   - lxd/instance/drivers/driver/qemu: Updated d.pid usage
   - lxd/instance/drivers/driver/qemu: Comment clean up in Stop
   - lxd/instance/drivers/driver/qemu: Dont start device cleanup in onStop until QEMU process has ended
   - lxd/instance/drivers/driver/qemu: Increase max wait time for qemu process to exit
   - lxd/images: pass publish expiration date to Export(); fallback to metadata.yaml expiration date
   - lxd/instance/instance_interface.go: add expiration date parameter to Export()
   - lxd/instance/drivers/driver_lxc: Export(): handle expiration date
   - lxd/instance/drivers/driver_qemu: Export(): handle expiration date
   - lxd/instance/drivers/driver/qemu: Fix logger in onStop
   - lxd/cluster/heartbeat: Don't send heartbeat from member that doesn't know its own address
   - lxd/endpoints: Update endpoints Config doc
   - lxd/cluster/heartbeat: Get local cluster address from node.ClusterAddress in heartbeat
   - lxd/storage: Add swagger documentation for volumes
   - shared/api: Add swagger metadata for storage volume state
   - shared/api: Add swagger metadata for storage volume snapshots
   - lxd/storage: Add swagger documentation for volume snapshots
   - lxd/storage: Fix operation type for snapshot rename
   - shared/api: Add swagger metadata for storage volume backups
   - lxd/swagger: Remove partial coverage warning
   - lxd/swagger: Fix bad typing
   - doc/rest-api: Strip and point to swagger
   - doc/rest-api: Refresh swagger YAML
   - README: Add liblz4-dev dependency when building from source
   - doc: btrfs-tools was replaced by btrfs-progs after Bionic
   - doc: bzr isn't used anymore
   - doc/rest-api: Linkify API doc
   - lxd/device: Add and use ErrMissingVirtiofsd
   - lxd/endpoints: Support HAProxy protocol header
   - lxd: Support HAProxy protocol header
   - doc: Add core.https_trusted_proxy
   - api: server_trusted_proxy
   - lxd/instance/drivers/qmp/commands: Updates revert in AddNIC for consistency/clarity
   - lxd/instance/drivers/qmp/commands: Adds RemoveNIC function
   - lxd/instance/drivers/qmp/commands: Adds QueryPCI function and associated types
   - lxd/device/nic: Enable VM hotplug for macvlan, bridged, p2p, physical and sriov NIC types
   - lxd/instance/drivers/driver/common: Removes unnecessary check in runHooks
   - lxd/instance/drivers/driver/qemu/bus: Adds busDevicePortPrefix constant and uses it
   - lxd/instance/drivers/driver/qemu/templates: Uses busDevicePortPrefix constant indirectly
   - lxd/instance/drivers/driver/qemu: Allocate 4 additional PCI slots for hotplugging in generateQemuConfigFile
   - lxd/instance/drivers/driver/qemu: Adds qemuPCIDeviceIDStart constant
   - lxd/instance/drivers/driver/qemu: Update addCPUMemoryConfig to just return cpu count if nil stringbuilder supplied
   - lxd/instance/drivers/driver/qemu: Adds qemuNetDevIDPrefix and qemuDeviceIDPrefix constants
   - lxd/instance/drivers/driver/qemu: qemuDeviceIDPrefix and qemuNetDevIDPrefix usage
   - lxd/instance/drivers/driver/qemu: Adds deviceAttachNIC function
   - lxd/instance/drivers/driver/qemu: Handle hotplugging NICs by using d.deviceAttachNIC from deviceStart
   - lxd/instance/drivers/driver/qemu: Add revert to deviceStart
   - lxd/instance/drivers/driver/qemu: Adds deviceDetachNIC function
   - lxd/instance/drivers/driver/qemu: Updates deviceStop to hot unplug NICs
   - lxd/resources: Set RPM to 1 instead of 0 when rotational
   - include: add open_tree() and mount_setattr()
   - doc/projects: Remove white list term
   - Remove hang term
   - Remove white term
   - lxd/cluster/gateway: Remove black term
   - Remove dummy term
   - lxd/main/checkfeature: Remove dummy term
   - shared/idmap/shift/linux: Rename set_dummy_fs_ns_caps to spoof_fs_ns_caps
   - Remove sanity term
   - Replace Sanity Checks with Quick Checks
   - lxd/db: Update schema to apply removal of sanity term
   - lxd: use idmapped mounts
   - lxd: ensure absolute paths when hotplugging mounts
   - forkmount: update terminology
   - disk: allow the use of idmapped mounts
   - seccomp: handle idmapped mounts
   - lxd: split storage handling in startCommon() into separate helper
   - lxd: remove remaining DiskIdmap call in startCommon()
   - lxc/cluster: add command revoke-token to delete a cluster join token
   - test/suites/clustering: add tests for revoke-token
   - i18n: update translation templates
   - Makefile: Add "build" target
   - lxd/instance/drivers/driver/common: Adds Internal MAAS handling functions
   - lxd/instance/drivers/driver/lxc: Switch to common MAAS handling functions
   - lxd/instance/drivers/driver/qemu: Switch to common MAAS handling functions
   - lxd/instance/drivers/load: Add revert arg to create
   - lxd/instance/drivers/driver/common: Don't revert by calling inst.Delete() until after storage volume created in snapshotCommon
   - lxd/instance/drivers/driver/lxc: Add revert arg to lxcCreate and don't call d.Delete() in revert steps
   - lxd/instance/drivers/driver/qemu: Add revert arg to qemuCreate and don't call d.Delete() in revert steps
   - lxd/instance/instance/utils: Updates Create signature with revert arg
   - lxd/instance/instance/utils: Updates CreateInternal with a revert arg
   - lxd: instance.CreateInternal usage in tests
   - lxd/instance: Update instanceCreateAsEmpty to only revert with inst.Delete() after storage volume created
   - lxd/instance: Updates instanceCreateFromImage to only revert with inst.Delete() after storage volume created
   - lxd/instance: Updates instanceCreateAsCopy to only revert with inst.Delete() after storage volume created
   - lxd/api/internal: instance.CreateInternal revert usage in internalImport
   - lxd/instances/post: instance.CreateInternal usage in createFromMigration
   - lxd/migrate/instance: Adds revert arg to Do function to allow usage of instance.CreateInternal
   - lxd/migrate/instance: Add instance delete to revert after storage volume migration succeeded in Do
   - lxd/instances/post: Updates createFromMigration to pass revert to instance.CreateInternal
   - lxd/migrate/instance: Go var naming style suggestions
   - lxd: check for new idmapped mounts extension in LXC
   - lxd/storage/backend/lxd: Remove post hook resize from CreateInstanceFromBackup
   - lxd/storage/drivers/driver/common: Adds createVolumeFromBackupInstancePostHookResize function
   - lxd/storage/drivers/driver/btrfs/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook
   - lxd/storage/drivers/driver/ceph/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook
   - lxd/storage/drivers/driver/dir/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook
   - lxd/storage/drivers/driver/lvm/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook
   - lxd/storage/drivers/driver/zfs/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook
   - lxd/storage/drivers/driver/generic/vfs: Adds VMConfigDriveMountDir constant
   - lxd/storage/drivers/generic/vfs: Exclude config.mount directory in genericVFSBackupVolume
   - lxd/instance/drivers/driver/qemu: storageDrivers.VMConfigDriveMountDir usage
   - lxd/storage/drivers/utils: Adds force arg to shrinkFileSystem
   - lxd/storage/drivers: SetVolumeQuota comment consistency
   - lxd/storage/drivers/driver/ceph/volumes: shrinkFileSystem force arg usage
   - lxd/storage/drivers/driver/lvm/volumes: shrinkFileSystem force arg usage
   - lxd/storage/drivers/driver/common: runFiller comment improvement
   - lxd/storage/drivers/driver/common: Enable unsafe resize for container volumes in createVolumeFromBackupInstancePostHookResize
   - Revert "lxd/storage/backend/lxd: Remove post hook resize from CreateInstanceFromBackup"
   - Revert "lxd/storage/drivers/driver/btrfs/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook"
   - Revert "lxd/storage/drivers/driver/ceph/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook"
   - Revert "lxd/storage/drivers/driver/lvm/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook"
   - Revert "lxd/storage/drivers/driver/zfs/volumes: Updates CreateVolumeFromBackup to use createVolumeFromBackupInstancePostHookResize in generic post hook"
   - lxd/storage/drivers/driver/dir/volumes: Remove call to createVolumeFromBackupInstancePostHookResize
   - lxd/storage/drivers/volume: Add VolumePostHook type
   - lxd/storage/drivers: Update CreateVolumeFromBackup and associated function to use VolumePostHook type
   - lxd/revert/revert: Add Hook function type
   - lxd/storage/backend: Update CreateInstanceFromBackup signature to use revert.Hook
   - lxd/storage/drivers: Updates CreateVolumeFromBackup and associated function to use revert.Hook type
   - lxd/storage/drivers/volume: Remove allowUnsafeResize var
   - lxd/storage/drivers/volume: Add allowUnsafeResize arg to SetQuota and pass to SetVolumeQuota
   - lxd/storage/drivers/interface: Add allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/backend/lxd: Add allowUnsafeResize arg to function returned from imageFiller
   - lxd/storage/backend/lxd: b.driver.SetVolumeQuota usage
   - lxd/storage/utils: Adds allowUnsafeResize arg to ImageUnpack and pass to vol.SetQuota()
   - lxd/storage/drivers/utils: Adds allowUnsafeResize arg to ensureVolumeBlockFile
   - lxd/storage/drivers/generic/vfs: d.SetVolumeQuota allowUnsafeResize arg usage
   - lxd/storage/drivers/driver/btrfs/volumes: ensureVolumeBlockFile allowUnsafeResize arg usage and comment
   - lxd/storage/drivers/driver/btrfs/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/ceph/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/cephfs/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/dir/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/lvm/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/zfs/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/mock/volumes: Adds allowUnsafeResize arg to SetVolumeQuota
   - lxd/storage/drivers/driver/btrfs/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/ceph/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/dir/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/lvm/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/btrfs/mock: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/zfs/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/cephfs/volumes: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/types: Adds allowUnsafeResize arg to VolumeFiller's Fill function definition
   - lxd/storage/drivers/driver/lvm/utils: d.SetVolumeQuota usage
   - lxd/storage/drivers/driver/dir/volumes: ensureVolumeBlockFile usage and comment
   - lxd/storage/drivers/common: Updates runFiller to pass allowUnsafeResize arg to filler's Fill function as needed
   - lxd/storage/drivers/driver/common: Updates createVolumeFromBackupInstancePostHookResize to pass allowUnsafeResize to driver.SetVolumeQuota
   - lxd/storage/drivers/driver/common: Remove createVolumeFromBackupInstancePostHookResize
   - lxd/storage/drivers/generic/vfs: Error check Unmount in post hook from genericVFSBackupUnpack
   - lxd/storage/backend/lxd: Enable allowUnsafeResize for container imports in CreateInstanceFromBackup
   - lxd/init: Update for token based join
   - client: Simplify User-Agent logic
   - lxd/daemon: Add forwarded requestor to context
   - lxd/operations: Support forwarded requestor
   - lxd/cluster: Pass original requestor around
   - lxd: Pass request around
   - lxd/storage/drivers/driver/zfs/volumes: Fix bug with VM optimized import not returning filesystem volume post hook
   - lxd/daemon: updateCertificateCacheFromLocal usage
   - lxd/certificates: Removes unused cert arg from updateCertificateCacheFromLocal
   - lxd/request: Introduce new package
   - lxd: Use the new request package
   - lxd/device/nic/bridged: Allow using IP filtering with an unmanaged parent bridge
   - lxd/firewall/firewall/interface: Adds parentManaged arg to InstanceSetupBridgeFilter
   - lxd/firewall/drivers/drivers/nftables: InstanceSetupBridgeFilter signature
   - lxd/firewall/drivers/driver/xtables: Adds parentManaged arg to InstanceSetupBridgeFilter
   - lxd/firewall/drivers/drivers/xtables: Adds parentManaged arg to generateFilterIptablesRules
   - lxd/device/nic/bridged: Updates d.state.Firewall.InstanceSetupBridgeFilter usage to provide managed parent indicator
   - test: Include the managed bridge in the nic counters for bridged NIC filtering
   - test: Add test for unmanaged bridge IP filtering
   - lxd: update instructions for compilation from a release tarball
   - lxd/init: show the new default value for password authentication
   - doc/networks: Use n.n.n.n rather than a real IP 1.2.3.4 for example IP in systemd-resolve command
   - doc/networks: Adds guide on how to get systemd to configure systemd-resolved on lxdbr0 start up
   - api: clustering_update_cert
   - shared/api: Add ClusterCertificatePut
   - lxd/api: Add clusterCertificatePut
   - doc/rest-api: Refresh Swagger YAML
   - client: Add UpdateClusterCertificate
   - lxd/cluster: Add NetworkUpdateCert
   - lxc/cluster: Add update-certificate
   - i18n: Update translation templates
   - tests: Add cluster certificate update
   - doc/clustering: Add section on update-certificate
   - lxd/api/project: Error improvements in projectsPost
   - lxd/api/project: Comment ending consistency in projectsPost
   - lxd/api/project: Prevent project names that contain underscores in projectValidateName
   - lxd/api/project: Comment ending consistency in projectPost
   - lxd/api/project: Error improvements in projectPost
   - lxd/api/project: Validate new project name not current when renaming in projectPost
   - test: Add tests for banned underscore in project names during create and rename
   - main/init: Define poolType type and constants
   - main/init: Updates availableStorageDrivers to use poolType type and associated constants
   - lxd/main/init/auto: Updates RunAuto to use poolType and associated constants
   - main/init/interactive: Updates askStoragePool to use poolType and associated constants
   - lxd/main/init: Remove hard coded remote storage driver types in availableStorageDrivers
   - lxd/main/init/interactive: Fix possible confusing missing storage backends error in askStoragePool
   - lxd/main/init/interactive: Don't default to ceph if not available in askStoragePool
   - lxd/main/init/interactive: Use validate.Optional in askClustering
   - shared/validate/validate/test: Adds tests for Required and Optional
   - shared/validate/validate: Remove optional check in IsOneOf
   - lxd/api/project: validate.IsOneOf optional usage
   - lxd/storage: validate.IsOneOf optional usage
   - lxd/storage/pools/config: validate.IsOneOf optional usage
   - shared/instance: validate.IsOneOf optional usage
   - lxd/network: validate.IsOneOf optional usage
   - lxd/network/driver/bridge: More consistent use of validate.Optional for fan.underlay_subnet
   - lxd/device/nic: Return -1 for Mtu in State() for bridged and ovn NICs if host interface not available
   - shared/util: Fill Stderr in RunCommandWithFds
   - shared/archive: Handle newer unsquashfs errors
   - doc: fix cluster.https_address' description
   - forkexec: handle broken close_range() backport in openSUSE Leap 15.3
   - lxd/apparmor/instance: Move instance profile generation into new function instanceProfileGenerate
   - lxd/apparmor/instance: Rename InstanceParse to InstanceValidate
   - lxd/instance/drivers/driver/lxc: apparmor.InstanceValidate usage
   - lxd/instance/drivers/driver/qemu: Validate raw.apparmor if changed
   - doc/virtual-machines: Removes statement about VMs being considered experimental
   - lxd/network/driver/bridge: Surface dnsmasq specific start up errors via a warning log entry
   - client: Only retry target addresses if initial connection fails
   - shared/api: Support for lxc monitor --pretty operation events
   - lxc: Support for lxc monitor --pretty operation events
   - lxd/instance/instance/interface: Adds Error field to Info struct
   - lxd/instance/drivers/driver/lxc: Info.Error initialisation
   - lxd/instance/drivers/driver/qemu: Populates Info.Error
   - lxd/instance/drivers/driver/qemu: Adds detection of /dev/kvm in Info()
   - lxd/instance/drivers/driver/qemu: Add check for vhost_vsock in Info()
   - lxd/state/state: Removes NewState function
   - lxd/daemon: state.State usage
   - lxd/main/init: state.State usage
   - lxd/state/test: State usage
   - lxd/state/state: Move Context field first
   - lxd/state/state: Adds InstanceTypes field to State
   - lxd/instance/drivers/load: Adds supportedInstanceTypes cache and lock and adds SupportedInstanceTypes
   - lxd/instance/instance/interface: Adds Type field to Info
   - lxd/instance/drivers/driver/lxc: Populates Type in Info
   - lxd/instance/drivers/driver/qemu: Populates Type in Info
   - lxd/instance/drivers/load: Comment improvement
   - lxd/daemon: Usage of instanceDrivers.SupportedInstanceTypes() in State() and init()
   - lxd/api/1.0: instanceDrivers.SupportedInstanceTypes usage in api10Get
   - lxd/instance: Removes instanceDriversCacheVal and supporting functions
   - lxd/instance/instance/utils: Checks requested instance type is supported in CreateInternal
   - lxd/include: include sys/wait.h in macro.h
   - lxd/lifecycle: add lifecycle package
   - lxd/lifecycle/instance/snapshot: add instance_snapshot
   - lxd/lifecycle/instance/backup: add instance_backup
   - test: add lifecycle package to static analysis
   - lxd/events/events: change SendLifecycle to accept apt.EventLifecycle
   - lxd/instance/instance/interface: add Operation
   - lxd/instance/drivers/driver/common: add Operation
   - lxd/instance/drivers/driver/common: fix IsStateful comment typo
   - lxd/instance/drivers/driver/common: remove lifecycle function
   - lxd/instance/drivers/driver/lxc: use InstanceAction for lifecycle events
   - lxd/instance/drivers/driver/qemu: use InstanceAction for lifecycle events
   - lxd/backup/backup/utils: remove Lifecycle
   - lxd/backup/backup/instance: expose instance interface
   - lxd/backup: use InstanceAction for lifecycle events
   - lxd/backup/backup/instance: use InstanceAction for lifecycle events
   - lxd/lifecycle/network: add network
   - lxd/network/driver/common: use NetworkAction for lifecycle events
   - lxd/lifecycle/instance: add InstanceExec
   - lxd/instance/drivers/driver/lxc: handle Exec lifecycle events
   - lxd/instance/drivers/driver/qemu: handle Exec lifecycle events
   - lxd/lifecycle/instance: add InstanceConsole
   - lxd/instance/drivers/driver/lxc: handle Console lifecycle events
   - lxd/instance/drivers/driver/qemu: handle Console lifecycle events
   - lxd/lifecycle/profile: add profile lifecycle events
   - lxd/profiles: handle ProfileCreated lifecycle event
   - lxd/profiles: handle ProfileUpdated lifecycle event
   - lxd/profiles: handle ProfileRenamed lifecycle event
   - lxd/device/proxy: Don't write out pid file until process has started OK
   - lxd/instance/drivers/driver/lxc: Adds onStopOperationSetup function
   - lxd/instance/drivers/driver/lxc: Call d.onStopOperationSetup from onStopNS
   - lxd/instance/drivers/driver/lxc: Call d.onStopOperationSetup from onStop
   - lxd/instance/drivers/driver/lxc: Move IsRunning to before creating start operation lock
   - lxd/instance/drivers/driver/common: Move onStopOperationSetup from lxc driver and make generic
   - lxd/instance/drivers/driver/lxc: Make Start, Stop and Shutdown locking and logging consistent with qemu driver
   - lxd/instance/drivers/driver/qemu: Switch to d.onStopOperationSetup in onStop
   - lxd/instance/drivers/driver/qemu: Increase onStop wait timeout to 5 minutes
   - lxd/instance/drivers/driver/qemu: Comment consistency with lxc driver in Start
   - lxd/profiles: handle ProfileDeleted lifecycle event
   - lxd/lifecycle/instance/backup: add InstanceBackupRetrieved
   - lxd/instance/backup: handle InstanceBackupRetrieved lifecycle event
   - lxc/alias: workaround for subcommand errors
   - lxc/config: workaround for subcommand errors
   - lxc/config/metadata: workaround for subcommand errors
   - lxc/config/device: workaround for subcommand errors
   - lxc/config/template: workaround for subcommand errors
   - lxc/cluster: workaround for subcommand errors
   - lxc/image/alias: workaround for subcommand errors
   - lxc/operation: workaround for subcommand errors
   - lxc/project: workaround for subcommand errors
   - lxc/file: workaround for subcommand errors
   - lxc/remote: workaround for subcommand errors
   - lxc/profile: workaround for subcommand errors
   - lxc/storage: workaround for subcommand errors
   - lxc/storage/volume: workaround for subcommand errors
   - lxd/main/cluster: workaround for subcommand errors
   - lxd/main/forkuevent: workaround for subcommand errors
   - lxd/main/forkmount: workaround for subcommand errors
   - lxd/main/forkfile: workaround for subcommand errors
   - lxd/main/forknet: workaround for subcommand errors
   - lxd/db/generate/root: workaround for subcommand errors
   - lxd/db/generate/db: workaround for subcommand errors
   - lxc/config/trust: workaround for subcommand errors
   - lxc/image: workaround for subcommand errors
   - lxc/network: workaround for subcommand errors
   - lxd/firewall/drivers/drivers/xtables: Don't use ebtables --concurrent flag
   - lxd/lifecycle/project: add project lifecycle events
   - lxd/api/project: handle ProjectCreated lifecycle event
   - lxd/api/project: handle ProjectUpdated lifecycle event
   - lxd/api/project: handle ProjectRenamed lifecycle event
   - lxd/api/project: handle ProjectDeleted lifecycle event
   - lifecycle/instance: add InstanceFileRetrieved
   - lifecycle/instance: add InstanceFilePushed
   - lxd/instance: Fix error message
   - lxd/instance/drivers/driver/common: Improve error logging in restartCommon
   - lxd/instance/operationlock: Close chanDone after deleting operation from map in Done
   - lxd/instance/drivers/driver/qemu: Don't fully regenerate config driver on start in generateConfigShare
   - lxd/instance/drivers/driver/qemu: Remove config drive template files dir and regenerate
   - lifecycle/instance: add InstanceFileDeleted
   - lxd/instance/drivers/driver/qemu: handle InstanceFileRetrieved lifecycle event
   - lxd/instance/drivers/driver/qemu: handle InstanceFilePushed lifecycle event
   - lxd/instance/drivers/driver/qemu: handle InstanceFileDeleted lifecycle event
   - lxd/instance/drivers/driver/lxc: handle InstanceFileRetrieved lifecycle event
   - lxd/instance/drivers/driver/lxc: handle InstanceFilePushed lifecycle event
   - lxd/instance/drivers/driver/lxc: handle InstanceFileDeleted lifecycle event
   - lxd/endpoints: Deal with nil listener
   - doc/index.md: Update CGO_LDFLAGS_ALLOW
   - Makefile: Set CGO_LDFLAGS_ALLOW
   - lxd/instance: Fix snapshot etag
   - shared/api: Add Project to StorageVolumeSource
   - client: Support for copy/move custom storage volume between projects
   - lxd/storage: Support for copy/move custom storage volume between projects
   - lxd: Support for copy/move custom storage volume between projects
   - lxc/storage_volume: Support for copy/move custom storage volume between projects
   - api: storage_api_project
   - i18n: Update translation templates
   - lxd/api/project: use nil for lifecycle event context
   - lxd/api/project: use consistent renamed lifecycle event context field names
   - lxd/api/project: remove redundant new_name from lifecycle context
   - lxd/profiles: use nil for lifecycle event context
   - lxd/profiles: use consistent renamed lifecycle event context field names
   - lxd/profiles: remove redundant new_name from lifecycle context
   - lxd/request/request: add CreateRequestor
   - lxd/operations/operations: use CreateRequestor to create lifecycle requestor
   - lxd/lifecycle/network: accept api.EventLifecycleRequestor as parameter
   - lxd/lifecycle/project: accept api.EventLifecycleRequestor as parameter
   - lxd/lifecycle/profile: accept api.EventLifecycleRequestor as parameter
   - lxd/api/project: create requestor for lifecycle event
   - lxd/profiles: create requestor for lifecycle event
   - lxd/network/driver/common: remove create function and references
   - lxd/network/driver/bridge: remove create references
   - lxd/network/driver/common: remove lifecycle event handling
   - lxd/networks: use clusterRequest alias for lxd/cluster/request package
   - lxd/networks: add network lifecycle event handling with requestor
   - Revert "client: Only retry target addresses if initial connection fails"
   - lxd/lifecycle/profile: fix incorrect comments
   - lxd/lifecycle/project: fix incorrect comments
   - lxd/storage: Handled nil config map
   - Makefile: Tweak quoting
   - lxd/instances: Retry on autostart failure
   - lxd/instances: Rework instancesRestart
   - lxd/lifecycle/storage/pool: add storage_pool
   - lxd/storage/pools: use clusterRequest alias for lxd/cluster/request package
   - lxd/storage/pools: handle StoragePoolCreated lifecycle event
   - lxd/storage/pools: handle StoragePoolUpdated lifecycle event
   - lxd/storage/pools: handle StoragePoolDeleted lifecycle event
   - lxd/lifecycle/image: add image
   - lxd/lifecycle/image/alias: add image_alias
   - lxd/images: handle ImageCreated lifecycle event
   - lxd/daemon/images: handle ImageCreated lifecycle event
   - lxd/images: handle ImageDeleted lifecycle event
   - lxd/images: handle ImageUpdated lifecycle event
   - lxd/images: handle ImageAliasCreated lifecycle event
   - lxd/images: handle ImageAliasDeleted lifecycle event
   - lxd/images: handle ImageAliasUpdated lifecycle event
   - lxd/images: handle ImageAliasRenamed lifecycle event
   - lxd/images: handle ImageRetrieved lifecycle event
   - lxd/images: handle ImageRefreshed lifecycle event
   - lxd/images: add swagger comment for imageAliasDelete
   - doc/rest-api: Refresh Swagger YAML
   - lxd/instance: Fix instance volume DB entry on copy
   - lxd/main_init_interactive: only ask for server host name when no joining token was provided
   - lxd/lifecycle/cluster: add cluster
   - lxd/lifecycle/cluster/member: add cluster member
   - lxd/api/cluster: use clusterRequest alias for lxd/cluster/request package
   - lxd/api/cluster: handle ClusterEnabled lifecycle event
   - lxd/api/cluster: handle ClusterDisabled lifecycle event
   - lxd/api/cluster: handle ClusterTokenCreated lifecycle event
   - lxd/api/cluster: handle ClusterCertificateUpdated lifecycle event
   - lxd/api/cluster: handle ClusterMemberAdded lifecycle event
   - lxd/api/cluster: handle ClusterMemberUpdated lifecycle event
   - lxd/api/cluster: handle ClusterMemberRenamed lifecycle event
   - lxd/api/cluster: handle ClusterMemberRemoved lifecycle event
   - lxd/instances: Fixes potential crash in instancesRestart and improves logging
   - client/util: Updates remoteOperationError to accept slice of remoteOperationResult
   - client: remoteOperationError usage
   - shared/network: RFC3493Dialer spacing
   - shared: Moves lxd/cluster/isClientConnectionError to shared.IsConnectionError
   - client/lxd/instance: Only try remote operation on different URL on connection error
   - lxd/instance/drivers/driver/common: Adds isStartableStatusCode function
   - lxd/instance/drivers/driver/lxc: Switch to d.isStartableStatusCode in Start()
   - lxd/instance/drivers/driver/qemu: Switch to isStartableStatusCode in Start()
   - lxd/instance/drivers/driver/qemu: If QMP socket not responding and QEMU process still exists then return Error status code
   - lxd/ip: Support for 'bridge' and 'ip link show' commands
   - lxd/ip: Support for 'tc' command
   - lxd/device: Use ip package instead of 'tc' command
   - lxd/device: Use ip package instead of 'bridge' command
   - lxd/device: Use ip package instead of 'ip link' command
   - lxd/instance/drivers/driver/common: Adds instanceInitiated return boolean to onStopOperationSetup
   - lxd/instance/drivers/driver/lxc: Fix lifecycle shutdown event in onStop
   - lxd/instance/drivers/driver/qemu: Fix lifecycle shutdown event in onStop
   - lxd/instance/drivers/driver/lxc: Detect error status in Shutdown and return appropriate error
   - lxd/instance/drivers/driver/qemu: Detect error status in Shutdown and return appropriate error
   - lxd/instance/drivers/driver/qemu: Detect error status in Stop and forcefully kill qemu process if exists
   - lxd/instance/drivers/driver/qemu: Handle internal-error status from QEMU
   - lxd/instance/drivers/driver/qemu: Remove hung term from statusCode
   - lxd/instance/drivers/driver/lxc: Remove hung term from getLxcState
   - lxd/device/nic/bridged: Apply managed network validation checks when parent is set to a managed network
   - test/suites/clustering: Fix tests to expect that creating container connected to pending network is forbidden
   - tests: Update bridged NIC filtering tests to account for validation being improved
   - lxd/device/nic/bridged: Allow use of static IPs with managed network that has DHCP disabled if IP filtering is in use
   - lxd/device/nic/bridged: Ensure static IPs are specified when using IP filtering on unmanaged parent bridge
   - lxd/instance/drivers/driver/qemu: Adds pidWait function
   - lxd/instance/drivers/driver/qemu: Improve killQemuProcess to clarify its behaviour
   - lxd/db/instances: Adds InstanceFilterAllInstances function
   - lxd/db/instances/test: Updates tests with db.InstanceFilterAllInstances
   - lxd/device/nic/bridged: Improve error for specifying static IP when DHCP disabled
   - lxd/device/nic/bridged: Add checks to validateConfig for existing NICs with same IPs specified
   - lxd/operations/operations: add SetRequestor
   - lxd/lifecycle/storage/volume: add storage_volume
   - lxd/storage/drivers/volume: add Pool
   - lxd/storage/volumes: use empty operation with SetRequestor instead of nil
   - lxd/networks: Add DNS record for gateway
   - lxd/storage/backend/lxd: handle StorageVolumeCreated lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeUpdated lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeDeleted lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeRenamed lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeRestored lifecycle event
   - lxd/lifecycle/storage/volume/snapshot: add storage_volume_snapshot
   - lxd/storage/volumes/snapshot: use empty operation with SetRequestor instead of nil
   - lxd/storage/backend/lxd: handle StorageVolumeSnapshotCreated lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeSnapshotRenamed lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeSnapshotDeleted lifecycle event
   - lxd/storage/backend/lxd: handle StorageVolumeSnapshotUpdated lifecycle event
   - lxd/device/nic/bridged: Improve performance of duplicate IP check in validateConfig
   - test: Adds tests for duplicate static DHCP assignment
   - lxd/device/nic/bridged: Check for duplicate MAC address in validateConfig
   - test: Add tests for duplicate MAC address assignment for bridged NICs
   - test: fix copy and paste error in duplicate static DHCP assignment
   - lxd/main/cluster: fix the link in the "recover-from-quorum-loss" prompt
   - lxd/network/network/utils/sriov: Add mutex to SRIOVFindFreeVirtualFunction to prevent concurrent start races
   - doc: sort sysctl parameters
   - doc: /proc/sched_debug normal mode is 444 so make it 400
   - api: Adds server_instance_driver_operational extension
   - doc/production-setup: ulimits tuning doesn't apply to snap users
   - api: Adds server_supported_storage_drivers extension
   - shared/api/server: Adds ServerStorageDriverInfo and adds StorageSupportedDrivers field to ServerEnvironment
   - doc/rest-api: Refresh swagger YAML
   - lxd/storage: Populates supported storage drivers cache var
   - lxd/api/1.0: Updates readStoragePoolDriversCache usage and populates env.StorageSupportedDrivers
   - lxd/main/init: Use server Environment for supported storage drivers
   - lxd/lifecycle/certificate: add certificate
   - lxd/certificates: use clusterRequest alias for lxd/cluster/request package
   - lxd/certificates: handle CertificateCreated lifecycle event
   - lxd/certificates: handle CertificateUpdated lifecycle event
   - lxd/certificates: handle CertificateDeleted lifecycle event
   - lxd/lifecycle/config: add config
   - lxd/api/1.0: handle ConfigUpdated lifecycle event
   - lxd/lifecycle/instance/log: add instance_log
   - lxd/instance/logs: handle InstanceLogRetrieved lifecycle event
   - lxd/instance/logs: handle InstanceLogDeleted lifecycle event
   - lxd/lifecycle/instance/metadata: add instance_metadata
   - lxd/lifecycle/instance/metadata/template: add instance_metadata_template
   - lxd/instance/metadata: handle InstanceMetadataRetrieved lifecycle event
   - lxd/instance/metadata: handle InstanceMetadataUpdated lifecycle event
   - lxd/instance/metadata: handle InstanceMetadataTemplateRetrieved lifecycle event
   - lxd/instance/metadata: handle InstanceMetadataTemplateCreated lifecycle event
   - lxd/instance/metadata: handle InstanceMetadataTemplateDeleted lifecycle event
   - lxd/lifecycle/operation: add operation
   - lxd/operations: handle OperationCancelled lifecycle event
   - lxd/lifecycle/instance: add InstanceConsoleRetrieved and InstanceConsoleReset lifecycle events
   - lxd/instance/drivers/driver/lxc: handle InstanceConsoleReset and InstanceConsoleRetrieved lifecycle events
   - shared/api: Add Address field to EventLifecycleRequestor
   - docs/api-extensions: Fix typo
   - lxd/api/cluster: use 'members' as name for ClusterTokenCreated lifecycle event
   - lxd/lifecycle/certificate: include object in source for created lifecycle events
   - doc: add events.md
   - lxd/api/1.0: Wait until LXD fully started before applying API changes in doApi10UpdateTriggers
   - lxc/cluster: Fix bad format string
   - lxd/daemon: No need to call vmMonitor anymore as its served by devicesRegister
   - lxd/devices: Add logging to devicesRegister
   - lxd/instances: Remove unused vmMonitor
   - shared/instance: Adds volatile.last_state.vsock_id to validation
   - lxd/instance/drivers/driver/qemu: Adds volatile.last_state.vsock_id volatile key
   - doc/instances: Documents volatile.last_state.vsock_id key
   - client: Make staticcheck happy
   - lxd-p2c: Make staticcheck happy
   - lxc-to-lxd: Make staticcheck happy
   - lxd-agent: Make staticcheck happy
   - lxc: Make staticcheck happy
   - lxd/instance/instance/utils: Adds cleanLogDir bool argument to CreateInternal
   - lxd/request: Support for Address field
   - api: event_lifecycle_requestor_address
   - lxd: instance.CreateInternal usage
   - doc: Renames volatile.last_state.vsock_id to volatile.vsock_id
   - lxd/instance/drivers/driver/qemu: Renames volatile.last_state.vsock_id to volatile.vsock_id
   - shared/instance: Renames volatile.last_state.vsock_id to volatile.vsock_id
   - lxd/db/generate/file/write: add alternate build comment to generated files
   - Makefile: add go formatting for update-schema
   - lxd/node: Improve error handling
   - lxd/storage/ceph: Improve version parsing
   - i18n: Update translation templates
   - lxd/device: Fix duplicate MAC test
   - tests: Fix cluster networking test

  ### 試用環境 <!-- Try it for yourself -->
  <!--
  Try the latest LXD release on our [demo service](https://linuxcontainers.org/lxd/try-it/).
  -->
  最新の LXD リリースを [デモサービス](https://linuxcontainers.org/ja/lxd/try-it/) で試せます。

  ### ダウンロード <!-- Downloads -->
  <!--
  The release tarballs can be found on our [download page](https://linuxcontainers.org/lxd/downloads/).
  -->
  このリリースの tarball は [ダウンロードページ](/lxd/downloads/) から取得できます。

  <!--
  Binary builds are also available for:
  -->
  ビルド済みバイナリーは次のように使えます:

   - **Linux:** snap install lxd
   - **MacOS:** brew install lxc
   - **Windows:** choco install lxc
